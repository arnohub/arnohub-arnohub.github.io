<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>源码编译安装linux内核过程</title>
    <link href="/2020/08/03/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85linux%E5%86%85%E6%A0%B8%E8%BF%87%E7%A8%8B/"/>
    <url>/2020/08/03/%E6%BA%90%E7%A0%81%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85linux%E5%86%85%E6%A0%B8%E8%BF%87%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="源码编译安装linux内核过程"><a href="#源码编译安装linux内核过程" class="headerlink" title="源码编译安装linux内核过程"></a>源码编译安装linux内核过程</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>阿里去堆叠方案需求</p><p>测试环境：CentOS&amp;Ubuntu，注意这里bond的源码修改是针对mode2&amp;mode4，由于模拟lacp环境比较复杂，测试环境仅测试mode2，物理机环境mode4环境下已测试可用。查看代码发现Kernel≥4.0都可用，具体如何修改这里就不放了，如有需求请加微信。</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><p>1、下载内核源码包导入到/usr/src、/usr/src/kernels</p><p>2、解压：tar -zxvf linux-5.7.12.tar.gz</p><p>3、改bond模块源代码</p><p>4、配置内核功能和模块，在系统原有的内核配置文件的基础上建立新的编译选项，按需配置的话使用：make menuconfig</p><p>cp /boot/config-2.6.32-754.31.1.el6.x86_64 .config<br>sh -c ‘yes “” | make oldconfig’<br>make oldconfig</p><p>5、安装GCC开发工具</p><p>CentOS：<br>yum groupinstall “Development Tools”<br>yum install ncurses-devel bison flex elfutils-libelf-devel openssl-devel<br>CentOS6.10默认GCC版本过低，编译过程报错，建议升级到7.*及以上版本：<br>yum -y install centos-release-scl<br>yum -y install devtoolset-7-gcc devtoolset-7-gcc-c++ devtoolset-7-binutils scl enable devtoolset-7 bash<br>echo “source /opt/rh/devtoolset-7/enable” &gt;&gt;/etc/profile</p><p>Ubuntu：<br>apt-get install build-essential libncurses-dev bison flex libssl-dev libelf-dev</p><p>6、更改bond源码以实现arp多发</p><p>7、编译内核：make  （不建议使用多线程编译，容易出现各种报错。make -j 4 &amp;&amp; make -j $(nproc)）</p><p>8、安装内核模块：make modules_install</p><p>9、安装内核：make install</p><p>10、更新grub配置：</p><p>grub2-mkconfig -o /boot/grub2/grub.cfg<br>grubby –set-default /boot/vmlinuz-***</p><p>如无grub2命令，也可修改grub配置文件：vim /boot/grub/grub.conf</p><p>default=0  #这里设定默认启动内核位置，从0开始，一般新安装的内核在第一个位置，所以这里设置default=0<br>timeout=5<br>splashimage=(hd0,0)/grub/splash.xpm.gz<br>hiddenmenu<br>title CentOS (5.7.12)<br>        root (hd0,0)<br>        kernel /vmlinuz-5.7.12 ro root=UUID=61568c83-750d-479f-82e4-32e08dfd6cb8 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet<br>        initrd /initramfs-5.7.12.img<br>title CentOS (2.6.32-754.31.1.el6.x86_64)<br>        root (hd0,0)<br>        kernel /vmlinuz-2.6.32-754.31.1.el6.x86_64 ro root=UUID=61568c83-750d-479f-82e4-32e08dfd6cb8 rd_NO_LUKS rd_NO_LVM LANG=en_US.UTF-8 rd_NO_MD SYSFONT=latarcyrheb-sun16 crashkernel=auto  KEYBOARDTYPE=pc KEYTABLE=us rd_NO_DM rhgb quiet<br>        initrd /initramfs-2.6.32-754.31.1.el6.x86_64.img</p><p>11、重启：reboot</p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>验证内核版本及arp双发是否实现</p><p>CentOS6.10</p><p>[root@localhost ~]# uname -r<br>d5.7.12</p><p><strong>tcpdump -i eth0 arp</strong></p><p>![image-20200803120352556](/Users/zzh/Library/Application Support/typora-user-images/image-20200803120352556.png)</p><p><strong>tcpdump -i eth1 arp</strong></p><p>![image-20200803120507436](/Users/zzh/Library/Application Support/typora-user-images/image-20200803120507436.png)</p><p>Ubuntu18.04</p><p>root@ubuntu:~# uname -r<br>5.7.12</p><p><img src="/Users/zzh/Desktop/WechatIMG29.png" srcset="/img/loading.gif" alt="WechatIMG29"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>阿里网络浅谈</title>
    <link href="/2020/05/10/%E9%98%BF%E9%87%8C%E7%BD%91%E7%BB%9C%E6%B5%85%E8%B0%88/"/>
    <url>/2020/05/10/%E9%98%BF%E9%87%8C%E7%BD%91%E7%BB%9C%E6%B5%85%E8%B0%88/</url>
    
    <content type="html"><![CDATA[<h1 id="阿里网络浅谈"><a href="#阿里网络浅谈" class="headerlink" title="阿里网络浅谈"></a>阿里网络浅谈</h1><p>本文内容来自于：<br>【2016阿里双11技术揭秘】阿里双11背后的网络–张明<br>【2016GNTC】阿里对数据中心网络设计–曹捷</p><p>阿里巴巴目前拥有全球化的数据中心网络，其网络分布在包括亚洲、美洲、欧洲和大洋洲在内的全球各个大洲，而且部署的数据中心数量和规模随着阿里巴巴的业务增长还会不停扩大。这些数据中心之间由高带宽、低延时的网络进行连接，为的是满足如今许多分布式互联网应用的需求，这些分布式应用需要部署在很多不同的数据中心上，以保证在任何一个数据中心发生故障时可以将用户的流量从一个地方迁移到另外一个地方，保证应用的高可用性。与此同时，这些数据中心之间也存在着大量的数据需要进行同步，所以需要建立一个遍布全球的网络来支持数据传输。除此之外在各个地方部署数据中心的原因还包括提升用户体验的需求，如果用户由与自身距离比较近的数据中心来提供服务，就能体验到更低的延时。众所周知，互联网的延时大多是由信息在光缆中的传输速度和时间所决定的，传输距离越近意味着用户体验越好，所以为了给全球用户提供可靠、高性能的网络服务，需要在全球各地建立自己的数据中心。</p><p>但是设计、建设和运营如此巨大的数据中心网络是一项极为复杂的工作，大致需要分为五个步骤进行。</p><p>首先需要面对问题就是如何设计数据中心网络的架构。从组成情况来看，数据中心网络包括了骨干网、IDC网络以及城域网等。而从架构设计的角度出发，需要了解如何去设计网络才能满足业务需求；其次是如何保障网络的稳定性，另一方面还需要保证网络资源的灵活性，可以实现资源的灵活调度。</p><p>第二步需要面对的就是在网络设计完成之后，如何去建设网络的问题。建网过程包括了如何进行资源分配，包括IP资源的分配以及AS的分配等，之后需要根据资源分配结果生成相应的设备配置，而又因设备往往是由不同的厂家生产的，有不同的型号，在配置生成时需要保证生成的配置与设备相匹配。当配置生成后，下一步就是对网络进行交付，之后还需要对交付完成的网络进行一系列的检验。因为网络规模非常大，存在很多的连线，检验时需要确保所有的连线是正确的并且网络是联通的，是可以直接为业务提供服务的。</p><p>当网络建设完成之后，下一步就需要保证网络具有足够多的资源来满足业务的需求。这部分资源包括设备资源、带宽资源以及IP地址资源，需要保证各方面的资源是永远是足够多的才能保证服务质量。</p><p>还有一部分需要做的事情就是运维。当网络建成之后，在运营期间往往会出现各种各样的事情，所以需要随时监控网络中是否有故障发生，当故障发生之后需要及时进行故障的定位以及恢复。</p><p>最后一部分重要的工作就是对网络进行优化。因为网络是按照最初的设计和需求建设的，但随着业务不断的发展，新的技术涌现，新的需求也不停地提出，老的网络需要经过改造之后才能满足当前新的需求，所以需要进行各种各样的优化。优化一部分是由于业务需求变化导致的，另一部分是由于网络自身的调整导致的，比如由于需要进行扩容以及升级硬件和变更路由。还有一类是网络自身产生的优化需求，比如说某些设备存在bug或者有些新的特性需要提供，这样的情况下需要对设备上的软件进行升级。</p><h2 id="建立DCN网络所面对的挑战"><a href="#建立DCN网络所面对的挑战" class="headerlink" title="建立DCN网络所面对的挑战"></a>建立DCN网络所面对的挑战</h2><p>建立和运维如此巨大的DCN网络显然会带来很多技术挑战。<br>首先要保证网络具有高性能。高性能包括有足够高的带宽以及足够低的延时，随着数据中心网络技术的不断发展，业务和应用对网络在延时和带宽上的要求也越来越高，当前很多单服务器已经具备了25G甚至40G带宽的能力，而数据中心内部的延时已经可达到微秒级。</p><p>还有一个技术挑战就是高可用性。建立如此巨大的网络时，会有很多应用运行在上面，显然无论发生什么样的故障，需要保证网络是可用的，甚至对于是发生在网络外部的故障，比如相关运营商发生故障时也要保证有足够的能力进行快速切换，保证网络的可靠和高效。</p><p>另一个技术挑战就是超大规模。这样一张巨大的网络需要服务于全世界上亿的用户以及上百万的企业级用户，此时意味着需要有能力运维上百万台设备组成的巨大网络。</p><p>最后一个重要挑战就是低成本的需求。尽管网络的规模不断扩大，但是并不代表可以简单通过提高资金投入去解决问题，而是需要通过技术保证低成本，这里所谓低成本指的是成本增长速度需要远远低于用户增长的速度。</p><p>在设计和运数据中心网络时，应对这些挑战的关键就是需要做到网络自动化技术。那么如何通过网络自动化技术解决以上的四个问题呢？</p><p>首先对于高性能的要求，其实建立任何一张网络都不可能保证永远有足够多的带宽满足任何时刻所有用户的需求，总会存在某个时刻网络带宽和用户需求不匹配的情况，当这种情况发生的时候，需要网络能够自动地进行带宽的分配和路径的优化。因为不同的应用对于网络的需求是不同，比如电商类应用和搜索类应用对延时的要求比较低，同时对带宽的需求也不是很高，但是对于像大数据应用对于带宽要求就往往会非常高，但是对于延时的要求则比较低，所以在发生网络拥塞或者网络资源不够用的时候，需要能够自动地将网络带宽在不同的应用之间进行合理分配，并且对于路径进行优化，以此来同时满足多个应用的需求。</p><p>对于高可用性的要求，一方面需要尽量减少网络中发生故障的数量，另一方面需要在故障发生后尽量减少故障恢复的时间。这就涉及到网络自动化技术中的两点，第一为了减少网络中发生的故障，需要网络能够进行自动隐患排查，在将网络中的隐患提前排查掉之后，网络发生故障的概率会大大降低。另外当故障发生时，需要能够自动进行故障恢复，显然当网络能够进行故障自动恢复的时候，其花费的时间会远远低于人工进行恢复的时间。</p><p>对于超大规模的要求，当网络中的设备数量达到百万级以上的时候，显然通过人工进行管理是不现实的，需要通过网络自动化技术对网络进行自动化配置、监控以及优化，尽量减少人在其中需要做的事情。</p><p>对于低成本的要求，通过自动化技术管理网络时，所需要的人力成本会大大降低。其实整个网络的成本中主要由两大部分构成，一部分是人力成本，另外一部分就是物理设备的成本。通过自动化技术可以很容易地降低人力成本，在另一方面也可以提高资源的利用率，因此可以采购更少的资源来满足同样的业务需求，降低整个网络的成本。</p><h2 id="如何实现网络自动化"><a href="#如何实现网络自动化" class="headerlink" title="如何实现网络自动化"></a>如何实现网络自动化</h2><p>分享完网络自动化的优势以后，再聊聊如何实现网络自动化。在我们为阿里构建自动化网络系统的时候，经历了如下的几个步骤：</p><p>第一步是网络自动化的基础。任何网络想实现自动化都需要一个安全、可靠、高性能的设备管控平台，没有这个设备管控平台，网络自动化的实现也就无从谈起。这里的高性能指的是需要具有高并发和低延时的特性，同时可以对于大量设备进行操作；可靠是指无论发生什么样的故障，平台本身需要可靠；安全在管控平台中也是非常重要的一点，因为当通过自动化的技术管理网络时，自动化管理系统的任何一个微小的故障或不可预测的行为都可能对网络造成巨大的影响。在这样的情况下，就需要管控平台具有风险管控能力，保证在不可预测的情况下，仍能保障网络安全。</p><p>当具有了自动化的管控平台之后，下一步就需要在平台之上实现可自定义的、可扩展的网络自动化应用场景。为什么需要可自定义呢？这是因为网络自动化管理场景是复杂和多样化的，所以必须要保证自动化管理场景具有开放的能力，网络自动化场景不是完全由自动化平台自己构建的，我们将这些场景定义能力开放出去，这样相关的网络工程师、架构师甚至是客户都可以在平台的基础上去定义和开发适合自身的网络自动化运维场景，这样才能够真正地实现网络自动化。还有非常重要的一点就是可扩展性，因为任何时刻我们所能构想到的只是当前的场景，随着应用的发展和网络的变化，很多新的场景会涌现出来，所以打造出的网络自动化系统需要具备良好的可扩展性以便于应对未来的需求。</p><p>第三步也是非常重要的一步，其实网络不仅仅是多台设备的集合，其还包括了各种资源之间复杂的依赖关系。举个简单的例子，当将一条链路关闭的时候，受到影响的不仅是经过了这条链路的流量，全网的路由都有可能发生变化，很多其他的链路以及路由设备上的路由表都会相应地发生变化。这就要求在看待网络时不仅仅关注于有多少台设备以及设备的运行状态，而是需要深刻理解设备之间的复杂的依赖关系。这就要求构建全网的复杂网络模型，去真正地模拟和预测网络的变化情况。</p><h2 id="网络自动化蓝图"><a href="#网络自动化蓝图" class="headerlink" title="网络自动化蓝图"></a>网络自动化蓝图</h2><p>接下来分享一下究竟该如何构建网络自动化系统。我们可以将网络自动化系统分成五个层次来看，首先最底层是设备层，设备层里包含了所有可能出现的网络设备，包括路由器、交换机等设备；在设备层之上需要构建通道层，通道层的作用就是可以通过其控制设备层的设备，通过网络协议去管理和读写底层的设备；在通道层之上需要构建管控层，所谓管控层就是网络自动化的管控平台，我们可以通过管控层平台去管控所有的设备并对其进行操作；在管控层之上就是应用层，在这个层面可以实现各种各样的自动化的运维场景，比如说最常见的包括网络的监控、故障发现和定位、架构的定义以及自动的交付系统；在应用层之上还存在模型层，比如在应用层的故障自动定位的应用在操控设备的时候往往不仅是对于设备进行读写操作，更多地需要对于全网进行理解，需要了解网络的拓扑以及IP地址分配等，在模型层里会存储全网的模型，包括物理拓扑、设备情况、设备之间的逻辑关系以及协议关系。</p><p>由于时间有限，所以我们选取网络自动化模型中的两个例子进行深入的讲解。</p><h2 id="T2平台"><a href="#T2平台" class="headerlink" title="T2平台"></a>T2平台</h2><p>第一个在是管控层打造的网络自动化管控平台Terminal2（T2）。大家通常对于设备的操作都需要Terminal，而这个网络自动化管理平台区别于其他的终端所以称之为Terminal2。</p><h4 id="T2的整体设计以及用例"><a href="#T2的整体设计以及用例" class="headerlink" title="T2的整体设计以及用例"></a>T2的整体设计以及用例</h4><p>我们打造T2的目的是做网络自动化的管控平台，那么首先需要搞清楚的就是T2需要支持什么样的网络自动化运维工作。<br>最常见的网络运维工作包括网络变更，举例而言就是M机房IP地址段告急，需要紧急扩容一段IP地址到该机房的网络设备上，这种情况属于计划内的变更，当然还存在紧急的变更，比如突然发生的故障需要临时关闭连接或者进行网络切换完成恢复的工作。</p><p>还有一大类需要支持的运维工作就是故障处理，举例而言就是当A城运营商网络出现异常，需要快速将业务流量切换到B城同一运营商网络。除去流量切换以外，还需要经常做的操作有对于设备的隔离，包括对于整机的隔离以及对于某个端口的隔离。<br>另外一类需要支持的运维工作就是网络巡检，举例而言M机房中同一组里面的DSW-XX-YY-1和DSW-XX-YY-2路由条目不一致，往往会造成隐患，需要通过巡检发现。</p><p>最后一类非常重要的运维工作就是建设交付，比如在双11之前往往需要新建集群，对于新建设的集群往往需要将新的配置发送到所有的设备上去，这就涉及到配置的下发以及交付的检查工作。</p><h4 id="T2的设计思路"><a href="#T2的设计思路" class="headerlink" title="T2的设计思路"></a>T2的设计思路</h4><p>T2的设计思路就是将运维的场景和自动化平台进行分离。希望能够使用户通过编写各种各样的模版，灵活的实现各种复杂运维操作，将这种能力开放给用户，同时提供各种常用的系统函数和模板库供用户调用，如此可以大大简化模板的编写工作。</p><p>另外从自动化平台的角度来看，平台只需要去高效地执行这些模板即可。为了高效地执行这些模板需要平台具有支持几千台设备并发访问的高性能，比如在巡检场景下可能会需要对于全网设备进行巡检。网络内的设备数量是非常巨大的，也需要平台的高可用性和跨地域的容灾能力。另外平台也需要具备兼容性，对于不同厂商的不同型号的设备往往会使用不同的协议，所以需要兼容地支持这些协议。还有就是平台安全，因为在T2平台上编写场景时有可能发生失误，可能会对大量的设备产生误操作，为了在这样的情况下不对于网络造成太大的影响，所以需要实现读写帐号分离、完善的鉴权机制以及设备并发控制等保证自动化平台的安全。</p><p>通过将运维场景和自动化平台进行分离使得运维场景变得非常易于扩展，同时也使得整个系统的复杂度变得可控。</p><h4 id="T2系统架构"><a href="#T2系统架构" class="headerlink" title="T2系统架构"></a>T2系统架构</h4><p>首先用户需要通过Web页面编辑模板，系统内则会存在模板管理模块，用户模板、单设备模板以及库模板都会沉淀在DB中。当模板编写完成后，用户就可以使用这些模板了。当用户进行日常变更的时候只需要指定是模板以及所需的参数，就可以依靠平台执行这些功能。对于故障恢复，我们希望故障恢复的时间越短越好，对于这类特殊的任务，平台也会将其相应的模板和参数集成在网页按钮后面，当故障发生的时候，不需要再指定模板和参数，只需要点击一个按钮就可以将故障恢复。</p><p>当用户完成了任务的创建后，任务管理模块就会将任务通过MessageQueue下发到TaskExecutor里面，TaskExecutor会对模板变更的任务进行解释，将用户编写的任务翻译成为可以执行的指令同样通过MessageQueue下发到Scheduler，Scheduler的主要职责是将设备需要执行的指令根据其所在的安全域地理位置下发到对应的最接近的Agent上，最后Agent会通过与设备相兼容的协议将任务真正地下发到设备上执行。</p><p>接下来结合具体例子介绍一下T2模板，借助IP端扩容的实例解释一下模板变更的过程。下图左边显示的是为完成IP扩容段时需要输入的命令，右边显示的是将命令沉淀成模板和参数，当模板编辑完成之后就可以下发到机器上进行批量执行。这样的过程解决了三个问题，首先是标准化的问题，当依靠人工执行这些命令时，工作的质量就取决与网络工程师的能力高低以及其他人为因素，通过标准化过程沉淀成为模板以后就避免了很多人为的失误。另外因为沉淀成为了模板，所以可以批量进行执行，可以实现模板执行的自动化，达到全自动化的运维。另外因为大部分运维场景的操作是类似的，所以可以向模板中传入不同的参数达到运维的复用。</p><p>在分享完T2的模板以后，接下来讲解一下T2的模板库，在模板库里面最底层的叫做原子模板，原子模板中包含了系统最底层的调用包括ping检查，以及外部系统的调用如SDN Controller 的API以及CMDB的API等，将这些都封装在原子模板里，以便于用户在编写自己模板时进行调用。另外一种就是单设备的模板，单设备的模板可以简单地理解为针对于单个设备或者同类型设备的CLI组合，它往往是针对于厂商型号适配后的指令集，单设备模板的目的是为了解决适配问题，支持按照角色、架构、厂商、型号以及操作系统版本来定义模板。<br>最后一类是用户模板，用户模板可以用来封装用户自动化场景，包括变更的模板和巡检的模板等。通过单设备模板已经将运维的差异性屏蔽了，所以在编写用户模板时就不需要关心底层设备的情况，而只需要关心业务逻辑即可，用户模板里定义的是比较高级的跨设备、跨场景的复杂模板编排，通过用户模板可以实现全自动化的变更流程。</p><p>下面使用一个简单的例子解释一下用户如何使用T2系统。这个例子是关于ISP出口一键切换的例子。当某个出口发生故障的时候需要迅速地将流量从地点A切换到地点B，来保证业务的顺畅运行，下图主要是T2系统的截屏。在这里每行的按钮是代表将流量从A城切换到B城，而第二张图的按钮表示将流量切回到B城。在这里面的每个按钮背后其实都对应了上百行的模板脚本，多行的切换按钮覆盖了所有ISP紧急切换场景，这样的切换执行时间与人工切换相比缩短了10倍以上，多次避免了严重的业务故障。</p><p>下图是在执行ISP出口一键切换时平台的执行情况。图中红框里面的部分是在执行ISP出口切换时的指令，对于每条指令都可以看到其执行后在的回显情况。通过这样的指令执行过程可以很容易地将问题所在挖掘出来并修复，甚至可以在平台上提供像设置断点这样的高级功能，使得在执行一定的指令后可以停下来观察回显结果，如果结果不符合预期可以选择回滚或者中断执行的过程，这些功能都大大地提高了平台的可用性。</p><h4 id="T2系统的现状"><a href="#T2系统的现状" class="headerlink" title="T2系统的现状"></a>T2系统的现状</h4><p>T2目前是整个阿里巴巴集团的网络自动化的入口，通过T2平台可以支持多种的网络自动化运维场景，包括自动变更、故障恢复、网络巡检以及建设交付等等。接下来我们会进一步地丰富网络自动化运维的场景，做到真正的全自动化数据中心网络运维。</p><h2 id="网络巡检平台"><a href="#网络巡检平台" class="headerlink" title="网络巡检平台"></a>网络巡检平台</h2><p>介绍完T2之后再介绍一个位于应用层的网络巡检平台。首先谈一下什么叫做网络巡检，网络巡检覆盖哪些内容。网络巡检其实覆盖了整个网络中全部的资源的信息，这里包含了硬件的状态，比如板卡、磁盘、CPU以及内存等；也包含了物理资源比如整机资源、端口互联状况等；还包括了逻辑资源，比如IP地址、VLAN、MTP等；以及最后的协议资源，因为同一个网络中往往会运行各种网络协议包括ISIS、OSPF、LDP以及BGP等常见的协议，对于所有的协议，我们都希望知道其互联状况是怎样的。</p><h4 id="为什么需要网络巡检"><a href="#为什么需要网络巡检" class="headerlink" title="为什么需要网络巡检"></a>为什么需要网络巡检</h4><p>网络巡检其实有很多的使用场景，这里主要分享一些关于故障的网络巡检场景，比如排查故障隐患。当我们了解整个网络的运行状态时，往往就会比较容易发现异常的状况，比如像内存泄漏问题，其实在网络发生问题的时候往往能看到某些设备的内存使用率在不停地上升，这很可能是因为内存泄漏造成的，在这种情况下其实可以通过对设备进行关闭或者重启操作来防止严重的后果。除去对于运行的巡检之外还可以完成一些配置问题的巡检，比方判断BFD配置是否规范等。</p><p>另外一类网络巡检工作就是故障的报警和定位，在很多故障发生的时候，首先发现故障问题的往往是运行在网络上的应用，应用会发现网络在丢包或者网络的延时比通常大很多，这种情况下就需要通过巡检所提供的网络拓扑和应用发出的报警结合在一起来定位究竟是哪一个设备和端口引起故障。</p><p>还有一类网络巡检任务就是自动化变更。很多的故障是在变更中引起的，所以在进行变更时也需要进行实时地检查网络运行状况以及配置的变化，以便于在发生故障时通过回滚或者终止措施来降低故障所带来的影响。</p><h4 id="网络巡检所面临的挑战"><a href="#网络巡检所面临的挑战" class="headerlink" title="网络巡检所面临的挑战"></a>网络巡检所面临的挑战</h4><p>一个很重要的挑战就是设备的多样性问题，因为在一个巨大的网络中往往会有多样的设备厂商、型号以及操作系统版本，对于每一种设备型号都需要进行数据项的采集，而且这些数据项的采集和解析规则往往都是不一样的。</p><p>另外一个重要的挑战就是巡检平台需要支持多维度的巡检规则。因为当将多维度的数据项采集回来之后，如何去设计数据项规则判断数据项是否正常也是一个复杂的工作。当去表达这样的规则时可以使用比较、正则表达式等，另外还需要确定规则的对象，因为数据项采集的对象可能是单台的设备，可能是逻辑设备也可能是设备组。另一重要维度是时间维度，一些数据项可能不仅需要看最新的数据，还要看历史数据项来判断变更是否正常。除去以上三种规则还需要基于网络模型的复杂巡检规则，比方判断网络中是否存在黑洞，所用的IP端是否在骨干网上可见，因为比较复杂，所以往往需要通过建立模型来进行表达。</p><h4 id="网络巡检系统的架构"><a href="#网络巡检系统的架构" class="headerlink" title="网络巡检系统的架构"></a>网络巡检系统的架构</h4><p>首先用户在使用网络巡检系统时需要输入一些网络状态巡检或者配置巡检的模板，当用户录入这些巡检项时需要同时指定设备类型以及型号信息，以及针对这样的类型设备应该采取什么样的方式去采集配置，对应的命令是什么，以及将这些所需要的状态采集回来之后怎样从中间提取并且解析所需要的数据项，最后就是与这些数据项相关的规则是什么。当用户完成这些指令以后，就可以将相对应的巡检模板放入巡检系统里面。</p><p>巡检系统包含了三类接口，包括巡检模板管理、解析模板管理以及巡检基线管理，其中使用基线可以判断巡检数据是否正确。当用户完成了所有巡检项的录入之后，网络自动化平台的巡检系统就可以通过设备管控平台T2触发相应的巡检任务，去设备上将相应的信息采集回来，采集回来的信息会被输入对应用户录入的解析模板，通过解析模板对于相关的数据项解析回来，最后解析出来的数据项会根据相应的巡检规则判断是否正常，并进行相应的处理。同时相应的信息也会输入到网络模型中，用于生成整个现网的模型，之前提到的巡检规则中人工可以录入的往往是比较简单的，还有一类是比较复杂的巡检规则是通过网络模型定义转换的。</p><p>除此以外，巡检系统也会提供一些对外的服务，比如巡检系统在网络中巡检出来的网络资源和物理资源等信息都可以输出到信息监控系统中，另外像快速变更系统和快速故障恢复系统也可以通过巡检系统实时获取到网络资源配置信息。</p><p>下面通过简单的案例介绍用户如何使用巡检系统。当用户拿到巡检系统后，第一步需要通过Web页面填写设备的厂商、型号以及操作系统版本等信息，根据这些信息可以判断使用什么样的方式去采集所需的巡检项。比如用户需要采集设备上操作系统的版本号信息，那么所对应的命令就是display version。当用户完成采集命令之后，下一步就需要确定命令对应的在设备上的输出是什么，采集回来的显示信息称之为KV的格式也就是key-Value的格式，也就是说前面的Key是Version的时候，后面我们所关系心的数据项就是操作系统的版本信息。在知道了大概的反馈信息之后，下一步就可以选择对于数据解析的模板，也就是说如何将采集的信息在输出中解析出来。在KV的典型模式下，用户只需要定义前面的关键字Key比如是Version，后面获取的变量就是Version的值。最后在完成解析规则之后，就需要去关联相应的巡检规则模板，之后使用规则比较来判断数据项是否符合要求。</p><h4 id="网络巡检系统的现状"><a href="#网络巡检系统的现状" class="headerlink" title="网络巡检系统的现状"></a>网络巡检系统的现状</h4><p>目前我们使用网络巡检系统定期地巡检阿里的设备。目前的巡检项有上百个状态，比如硬件的问题，像光纤和电源等，还有软件的问题，比如路由表和内存泄漏等，除去状态巡检外还会进行数十类的配资巡检，比如核心网私网地址路由规模过大问题、全网静态路由和默认路由规范检测等。通过各种状态巡检可以提前发现并且修复多种隐患，以保证在重大时间节点期间的网络运行稳定性。</p><h4 id="展望未来：从自动化到智能化"><a href="#展望未来：从自动化到智能化" class="headerlink" title="展望未来：从自动化到智能化"></a>展望未来：从自动化到智能化</h4><p>什么叫智能化呢？我们认为智能化有三个特征就是学习能力、预测能力以演进能力。学习能力是指能够通过之前的经验学习到东西；而预测能力是指不仅仅能够通过之前的知识学习到一些东西，还能够具备对未来的预测能力；在预测能力的基础之上，智能化还需要演进能力也就是根据将来要发生的事情对系统或自身进行优化来适应未来。</p><p>学习能力很重要，因为当前的网络规则是由专家定义的，所以需要系统学习。但是因为是由人定义的，所以难免会有疏漏，并且当规则发生变化时，往往需要重新定义，此过程的成本会非常高。而未来希望对规则进行完善和重新定义的过程由机器自动完成，这就需要机器学习的能力，机器通过现有的大量数据中寻找新的规则，可以大大降低成本。</p><p>预测能力也是非常重要的，目前的网络自动化是当某些事情发生之后如何进行快速的反映，比如故障发生时如何去快速恢复，而不是如何避免故障。但我们知道当故障发生前往往会有一些各种各样的现象，所以希望未来可以在故障发生前进行预测，真正地避免故障。</p><p>同样演进能力也极为重要，目前自动化可以完成线网中的运维工作，但是网络的优化还是由人主导的。但人受限于计算能力，所以无法把握全局，而计算机的计算能力却是无限的（相对于人脑），所以希望未来能够由机器依靠强大的计算能力挑选出网络全局优化的方案。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>交换机芯片及几种Serdes技术介绍</title>
    <link href="/2020/04/24/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E8%8A%AF%E7%89%87%E5%8F%8A%E5%87%A0%E7%A7%8DSerdes%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/"/>
    <url>/2020/04/24/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E8%8A%AF%E7%89%87%E5%8F%8A%E5%87%A0%E7%A7%8DSerdes%E6%8A%80%E6%9C%AF%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>全球即将步入5G时代，底层网络必须要满足高吞吐、低延迟、高可用、智能化运维等条件，交换机在IDC内扮演者重要的角色，交换机交换芯片决定了交换机的性能，而高性能交换的功能是由交换芯片完成的。<br>目前broadcom、华为、思科都有自己的400G交换芯片。</p><h2 id="Broadcom芯片简介"><a href="#Broadcom芯片简介" class="headerlink" title="Broadcom芯片简介"></a>Broadcom芯片简介</h2><p>broadcom芯片大致可分为三条产线：<br>1、Tomehawk，超大规模云计算网络/存储网络/高性能网络；<br>2、Trident，企业数据中心/园区/无线等；<br>3、Jericho，框式交换机。<br>最新的Th4芯片支持50G PAM4调制解调（serder）技术，单芯片提供25.6Tb交换能力。</p><h2 id="PAM4技术"><a href="#PAM4技术" class="headerlink" title="PAM4技术"></a>PAM4技术</h2><p>PAM4是PAM（Pulse Amplitude Modulation，脉冲幅度调制）调制技术的一种，PAM信号是继NRZ（Non-Return-Zero，非归零码）后的热门信号传输技术，也是多阶调制技术的代表，广泛应用在高速信号传输领域。<br>PAM4和NRZ信号波形对比图<br><img src="https://img-blog.csdnimg.cn/2020042415173746.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>对比我们发现，NRZ信号采用高、低两种信号电平表示数字逻辑信号0和1，每个时钟周期可以传输1bit的逻辑信息，PAM4采用4个不同的信号电平进行信号传输，每个周期可传输2bit的逻辑信息，在同样的波特率条件下，PAM4信号比特速率是NRZ的2倍。<br><strong>具体可理解为，NRZ(0,1)，PAM4(0,0；0,1；1,0；1,1)，一个PAM4相当NRZ两个时间位表达的信息量。</strong></p><h2 id="为什么需要PAM4技术"><a href="#为什么需要PAM4技术" class="headerlink" title="为什么需要PAM4技术"></a>为什么需要PAM4技术</h2><p>1、成本诉求，5G时代，流量增长非常迅猛，但是运营商收入增长并没有和流量增长相匹配，两者剪刀差越来越大，如何缩小流量和收入的不平衡是ISP面临的一大痛点，因此降低剪刀差的措施就是降低成本。<br>2、性能诉求，5G对高流量的诉求。<br>如何提升转发速率，这里有两个方面的因素：1、利用高阶的调制解调算法加速数据传输速率；2、利用电领域技术加速，比如使用III-V族元素化合物进行光芯片涉及，取代之前纯硅元素。</p><h2 id="PAM4-VS-NRZ"><a href="#PAM4-VS-NRZ" class="headerlink" title="PAM4 VS NRZ"></a>PAM4 VS NRZ</h2><p><img src="https://img-blog.csdnimg.cn/20200424153641432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>我们发现PAM4眼图（上）明显抖动增加，这导致激光调制变得困难，接受的探测器对四种状态之间的三个阈值做判断变得更困难，需要考虑激光器的惯有温度导致量子效应变化，必须要支持高灵敏度和高线性度，比如对噪声抑制进行更加精细化的处理。</p><h2 id="PSK"><a href="#PSK" class="headerlink" title="PSK"></a>PSK</h2><p>PSK（相位键控），是一种用载波相位表示输入信号信息的调制技术，相位键控分为绝对相位和相对相位两种，以二进制调制相位为例，取码元为1时，调制后载波与为调制载波相同；0表示调制后的载波与未调制载波反相。</p><h2 id="QAM"><a href="#QAM" class="headerlink" title="QAM"></a>QAM</h2><p>QAM（正交振幅调制），在调制过程中，同时以载波信号的振幅和相位来代替不同的数字比特编码，进一步提高了频带利用率。可实现两路并行的数字信息的传输。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>HPCC（高精度拥塞控制）</title>
    <link href="/2020/04/18/HPCC%EF%BC%88%E9%AB%98%E7%B2%BE%E5%BA%A6%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%EF%BC%89/"/>
    <url>/2020/04/18/HPCC%EF%BC%88%E9%AB%98%E7%B2%BE%E5%BA%A6%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>拥塞控制（Congestion Control,CC）是实现抄底延迟、高带宽、高速网络的网络稳定性的关键，在RDMA部署过程中发现现存的CC技术很难实现这个目标，因此提出HPCC方案来实现以上三个目标。HPCC利用INT来获取精确的链路负载信息并精确控制流量。通过增加因素，比如链路拥塞时的延迟信息，HPCC能够快速收敛，并利用剩余带宽以避免拥塞延迟，HPCC很容易部署在硬件上，并且已经部署在商用可编程的网卡和交换机上，相对于RDMA的拥塞控制方式（DCTCP），HPCC在incast场景下能够带来更低的延迟，并且减少拥塞发生的情况。</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>在过去十年内，链路的带宽由1Gb增长到100Gb，并且这种增速还在继续。越来越多的应用需要超低延迟和高带宽，在今天及未来的高速网络中迫切需要的两个因素。<br>在数据中内，我们发现有两个重要的趋势来驱动对高性能网络的需求，第一个是资源的分布式部署和分布式计算，分布式部署中，CPU需要高速与GPU、DISK等进行数据通信。分布式计算中不同的计算节点需要网络提供更大带宽、更低的延迟通信。第二个趋势是CPU、DISK等性能的提升需要网络提供一个更高速率的通道。<br>阿里通过部署RoCEv2网络中发现RDMA网络中数据线速传输，积极占用网络上线资源很容易引起严重的拥塞，占用很多队列缓存， 导致延迟敏感的业务流性能受损。这里有两个流控技术在部署过程中遇到的问题。</p><h3 id="PFC-Storems"><a href="#PFC-Storems" class="headerlink" title="PFC Storems"></a>PFC Storems</h3><p>比如在incast场景下，可能会导致设备无休止的发送PFC，或者由于bug引起的，我们尽最大可能阻止任何PFC帧的发送，我们换了CC的算法以减小发送的频率，虽然有效但链路利用率还是比较低。</p><h3 id="出奇长的延迟"><a href="#出奇长的延迟" class="headerlink" title="出奇长的延迟"></a>出奇长的延迟</h3><p>在机器学习应用中有些messages延迟大于100μs时就会产生影响，而RDMA延迟期望延迟小于50μs的，最后定位出原因，在同个集群内有一个云计算存储系统占用了大部分队列，因此不得不把机器学习部署在一个新的集群内。<br>通过以上两中情况发现一个好的CC才能提供一个低延迟、高吞吐、可靠的网络。一个好的CC才能比卖你数据包被过多缓存或者丢弃，同样在RDMA最新的CC 比如DCQCN和TIMELY，有一些重要的限制。收敛慢、无法避免数据包被队列、复杂的调整参数。</p><h2 id="阿里RDMA部署方案"><a href="#阿里RDMA部署方案" class="headerlink" title="阿里RDMA部署方案"></a>阿里RDMA部署方案</h2><p>阿里在RDMA环境下部署有存储、DB、深度学习训练框架业务，三级CLOS网络环境，一个POD几十台ToR，和汇聚层full-mesh互联，不同PoD通过Spine层进行数据交互，每台Server上联两台不同的ToR（去堆叠?），每个PoD是一个RDMA区域，意味着只有在同一个PoD内的Server之间可通过RDMA通信，使用RoCEv2，CC使用集成在RDMA网卡内的DCQCN，同时使用PFC，此时如果接收者发现数据包有丢失，发送者需要从丢包的地方开始重发。对比传统的TCP/IP网络，RDMA对性能的提升明显。</p><h2 id="下一代CC展望"><a href="#下一代CC展望" class="headerlink" title="下一代CC展望"></a>下一代CC展望</h2><p>1、快速收敛；<br>2、队列长度几乎为0；<br>3、更少的决定因素；不应该让op去调试，更应该自适应网络环境和他自己的流量模型。<br>4、公平调度；<br>5、部署简单。<br>INT（in-network telemetry）数据发送者可以从ack报文中知晓一条流经过的所有链路的负载，这就是的发送者发送数据时很容易做速率调整。另一点是网卡变得更加兼容和可编程，网卡有能力处理更多数据层面的计算。</p><h2 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h2><p>HPCC依赖交换机提供更细颗粒度的负载信息，比如：队列大小、流对的收发流量。当链路出现拥塞时，feedback信号可能会被延迟发送，为了避免这个问题，HPCC直接控制发送字节数，而不像DCQCN那样只能控制发送频率，HPCC依靠每个ack来感知链路负载信息，然后调整发送者发送速率。同样HPCC水线的控制同样重要，这里的做法是结合RTT-based和ACK-based。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>全球网络架构概述</title>
    <link href="/2020/04/05/%E5%85%A8%E7%90%83%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84%E6%A6%82%E8%BF%B0/"/>
    <url>/2020/04/05/%E5%85%A8%E7%90%83%E7%BD%91%E7%BB%9C%E6%9E%B6%E6%9E%84%E6%A6%82%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="全球海底光缆图"><a href="#全球海底光缆图" class="headerlink" title="全球海底光缆图"></a>全球海底光缆图</h1><p><img src="https://img-blog.csdnimg.cn/20200303230726776.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="全球互联网多级结构"><a href="#全球互联网多级结构" class="headerlink" title="全球互联网多级结构"></a>全球互联网多级结构</h1><p>全球互联网是多级结构，下级运营商需要购买上级运营商的转接带宽实现互联；平级运营商之间的对等互联，最底层运营商主要通过购买传送带宽实现全球通达，而顶级运营商只出口转接带宽或做少量的对等互联，而不需要购买转接带宽。</p><p>全球Tier1运营商能够通过对等关系获取全球路由表；网络可以通达多个洲；与多个洲内的其他运营商实现互联；在多个洲拥有或者租用洲际光缆。对等（peer）：访问对方的ISP和它的转接客户；对等互联通常采取互不结算的方式，同时也存在小网向大网付费情况。</p><p>转接（transit）：通过转接ISP访问全互联网；被转接方向转接方支付费用。互联又分为专用对等互联：在两个规模接近的ISP之间直接通过专有的链路相连；公共对等互联：在集中的物理位置上，接入多个网络，多个ISP之间通过共享连接方式实现多点流量的交换，IX或NAP。</p><h1 id="全球互联网大区互联情况"><a href="#全球互联网大区互联情况" class="headerlink" title="全球互联网大区互联情况"></a>全球互联网大区互联情况</h1><p>北美：互联网中心，ATT、Verizon、Sprint等是美国顶级互联网供应商，在全球出售转接带宽业务，以专用对等互联为主，接入IX比较的规模比较小。</p><p>欧洲：各国互联比较均等，IX发展的最好，目前大约有115个比较活跃的IX。</p><p>亚洲：逐步形成以日本、韩国、新加坡、香港为中心的亚洲地区互联网中心。位于伦敦的LINX（London Internet Exchange） IX，目前的基本概览如下，目前接入880个AS，遍布全球80个国家（2019.4）。该组织为非盈利的，收取的会员费用运行，基于公平共享的原则，所有费用成员平均分摊。</p><h1 id="全球网站访问top50排名"><a href="#全球网站访问top50排名" class="headerlink" title="全球网站访问top50排名"></a>全球网站访问top50排名</h1><p><a href="https://www.alexa.com/topsites" target="_blank" rel="noopener">https://www.alexa.com/topsites</a><br>中国流量最高的是tmall.com，全球第3，qq.com排名第四，baidu.com第五（2020.3.3日数据）</p><h1 id="国际互联网态势"><a href="#国际互联网态势" class="headerlink" title="国际互联网态势"></a>国际互联网态势</h1><p>1、目前仍然是以欧美为中心，尤其是美国占据了互联网的绝大部分资源；<br>2、Tier1之间不付费实现全互联，Tier2向Tier1支付转接带宽费；<br>3、北美以专用网间互联为主，公共对等互联为辅；<br>4、欧洲网间互联大多采用接入IX来实现的，包括Tier2和部分Tier1；<br>5、国际互联网格局处于转型期，区域Tier1逐步出现；<br>6、国外的IX同时负载国内和国际流量的转发，采用商业化形式运作；<br>7、全球访问量排名前列的最集中在美国。</p><h1 id="典型Tier1运营商互联情况"><a href="#典型Tier1运营商互联情况" class="headerlink" title="典型Tier1运营商互联情况"></a>典型Tier1运营商互联情况</h1><p>#</p><h1 id="典型Tier2运营商互联情况"><a href="#典型Tier2运营商互联情况" class="headerlink" title="典型Tier2运营商互联情况"></a>典型Tier2运营商互联情况</h1><p>#</p><h1 id="我国互联网国际出口流量分析"><a href="#我国互联网国际出口流量分析" class="headerlink" title="我国互联网国际出口流量分析"></a>我国互联网国际出口流量分析</h1><p>中国国际出口海底光缆一条是亚太直达海底光缆（APG，Asia Pacific Gateway）中国节点在上海崇明&amp;南汇，香港三个节点；<br>跨太平洋快线TPE（Trans-Pacific Express），中国节点在上海崇明和山东青岛；<br>国际互联、国内互联带宽和流量情况：国际出口带宽占比25%，国际出口流量占比9%；<br>国际出口出入流量占比：美国方向基本1:1（相差10%以内）；日韩入大于出（相差30%）；欧洲出大约入（相差20%）；<br>中国top50 网站占19个，占比38。（2020.3）；<br>中国网民总数8.29亿（普及率59.6%），手机网民总数8.17亿，国际出口带宽约为9000Gb，我国国际出口带宽费用为10.5w/G/月，欧美国际IX报价为1w/G/月。各运营商骨干国际出口带宽分布如下图所示：（数据来源CNNIC2018年12月发布的《中国互联网发展状况统计报告》）。<br><img src="https://img-blog.csdnimg.cn/20200303232742761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="现存问题"><a href="#现存问题" class="headerlink" title="现存问题"></a>现存问题</h1><p>1、国际互联主要依赖Tier1运营商转接，直接互联peer比较少。<br>2、互联费用比较高，需要借助Tier1运营商转接。<br>3、互联点保护性不强，国际光缆资源少，光缆中断风险大，路由单一。</p><p>我国互联网国际地位比较低，位于全球互联网中下层，同时我国互联网在信息源、网络等方面的处于劣势。信息和用户资源是网络价值中影响互联网的重要因素。<br>1、信源劣势：首先我国互联网接入国际领先内容提供上的数量少，国内ICP的创新程度远不及国际的ICP。国内ICP在很大程度上依赖于国际网站。<br>2、用户优势：我国宽带用户数目全球第一。<br>3、网络劣势：与国际top运营商存在数量级的差距。</p><h1 id="我国互联网网间互联概况"><a href="#我国互联网网间互联概况" class="headerlink" title="我国互联网网间互联概况"></a>我国互联网网间互联概况</h1><p>我国互联网互联方式分为直连方式和NAP方式（IX），以直连方式为主，IX为辅。<br>1、直连方式：两个互联单位之间在骨干路由器上通过点到点的直连数据链路相连；<br>2、NAP点方式：两个或多个互联单位网络交汇的公共平台，负责把不同的互联单位的IP网络连接，具备数据转发和路由发布功能。<br>目前我国有7个全国性互联单位之间骨干网络的互联，分别为：三大运营商（电信、联通、移动）、教育和科研网（CERNET）、经贸网、长城网、科技网。国家级NAP有北京NAP、上海NAP、广州NAP。<br>我国互联网网间存在的问题：<br>1、政策问题，包括接入单位比较少，管控不到位，同时接入资费比国际IX贵很多（相差100倍）。<br>2、技术问题，互联资源少，各单位接入带宽小，设备陈旧，技术落后，容量小，设备存在安全隐患。</p><h1 id="发展目标"><a href="#发展目标" class="headerlink" title="发展目标"></a>发展目标</h1><p>1、国际地位：利用用户规模的优势，把握移动互联网发展契机，提升互联网地位；<br>2、内容源：引入访问量大的国际热点内容源，加快国内热点内容源的国际化，基于移动互联网发展自主创新的内容和业务；<br>3、交换中心：接入欧洲大型的IX，尽可能多的与Tier2建立对等互联。<br>做好peering和transit的协商策略，全球网络为了满足于国际ISP用户建立peer关系实现业务互通，但是实际操作中与对端ISP进行peering会由于不了解需求提出方网络或者业务规模，而不愿意建立peer。（我国互联网国际地位较低，严格限制了我国互联网的发展）</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>流量控制相关</title>
    <link href="/2020/04/05/%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6%E7%9B%B8%E5%85%B3/"/>
    <url>/2020/04/05/%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6%E7%9B%B8%E5%85%B3/</url>
    
    <content type="html"><![CDATA[<h2 id="令牌桶简介"><a href="#令牌桶简介" class="headerlink" title="令牌桶简介"></a>令牌桶简介</h2><p>TP（Traffic Policing）流量监管，监督不同流量进入网络的速率，对超出的部分流量进行惩罚；<br>TS（Traffic Shaping）流量整形，主动调整流量输入的速率，达到削峰填谷；<br>LR（Line Rate）接口限速，对一个接口上发送或接收的全部报文的总速率进行限制。<br>上述措施实施的条件是必须要知道流量是否超出规格，一般采用令牌桶对流量的规格进行评估。<br>令牌桶可以看做一个存放一定数量令牌的容器，系统按照设定的速度向桶中放置令牌，当桶中令牌满时，多出的令牌溢出，桶中令牌不再增加，使用令牌桶对流量规格进行评估时，是<strong><em>以令牌桶中的令牌数是否满足报文的转发为依据</em></strong>。<br>RFC关于令牌桶处理报文的方式定义了以下标记算法：<br>-单速率三色标记算法：主要关注报文尺寸的突发；<br>-双速率三色标记算法：主要关注报文速率的突发。<br>令牌桶算法的评估结果都为报文打上red、yellow、green三种颜色标记，QoS会根据报文的颜色做相应的处理，两种模式都可以工作于色盲模式和色敏模式。<br>色盲模式详细介绍下标记算法。</p><h2 id="单速双桶"><a href="#单速双桶" class="headerlink" title="单速双桶"></a>单速双桶</h2><p>单速双桶采用RFC2697定义的单速三色标记器对流量进行测评，根据评估结果对报文标记颜色。<br>两个令牌桶称为C桶和E桶，用Tc和Te表示桶中的令牌数量，单速双桶有3个参数：<br>-CIR（Committed Information Rate）：承诺信息速率，表示向C桶中投放令牌的速率，即C桶允许传输或转发报文的平均速率；<br>-CBS（Committed Burst Size）：承诺突发尺寸，表示C桶的容量，即C桶瞬间能够通过的突发流量；<br>-EBS（Excess Burst Size）：超额突发尺寸，表示E桶的容量，即E桶瞬间能够通过的超出突发流量。<br>在单速双桶模式下当用户的流量速率小于配置的CIR时，报文被标记为green，当用户的突发流量大于配置的CBS小于EBS时，报文被标记为yellow，当用户突发流量大于配置的EBS时，报文被标记为red。<br>假设设备接口的CIR设置为1Mb/s，CBS为2000bytes，EBS为2000bytes，初始状态C桶和E桶为满，单速双桶模式下，令牌桶对报文处理过程如下：<br>1、假设第1个报文大小为1500bytes，此时报文长度小于CIR，报文被标记为绿色，此时Tc减少1500bytes，剩余500bytes；<br>2、假设1ms之后第2个大小为1500bytes的报文到达，在此间隔内，Tc增加，1Mb/s*1ms=1000bit=125bytes，即此时Tc为625bytes，此时发现C桶的令牌数不够，检查发现E桶有足够的令牌数，此时报文被标记为黄色，E桶令牌数减少1500bytes，剩余500bytes，C桶数目625bytes不变。<br>3、假设又1ms后第3个大小为1000bytes的报文到达，此时Tc数为750bytes，数目不够，Te剩余500bytes也不够，此时报文被标记为红色。<br>4、假设又过20ms，第4个大小为1500bytes的报文到达，再次间隔内，Tc增加2500bytes，由于CBS为2000bytes，加上原来的750bytes，共有2500+750-2000=1250bytes溢出被添加到E桶中，此时Te为1750bytes，由于报文大小小于Tc，因此报文被标记为黄色，Te为500bytes，Te为1750数目不变。</p><h2 id="单速单桶"><a href="#单速单桶" class="headerlink" title="单速单桶"></a>单速单桶</h2><p>只有C桶，E桶容量为0</p><h2 id="双速双桶"><a href="#双速双桶" class="headerlink" title="双速双桶"></a>双速双桶</h2><p>RFC2698中定义了双速三色标记器对流量进行测评，根据评估结果对报文标记颜色。<br>两个令牌桶称为P桶和C桶，用Tp和Tc分别表示对应桶中令牌的数量。双速双通有4个参数：<br>-PIR（Peak Information Rate）峰值信息速率，表示向P桶中投放令牌的速率，表示向P桶中投放令牌的速率，即P桶允许传输或转发报文的峰值速率；<br>-CIR：<br>-PBS（Peak Burst Size）峰值突发尺寸，表示P桶容量，即P桶能够通过的峰值突发流量；<br>-CBS：</p><h2 id="WRR和WFQ调度算法应用比较"><a href="#WRR和WFQ调度算法应用比较" class="headerlink" title="WRR和WFQ调度算法应用比较"></a>WRR和WFQ调度算法应用比较</h2><p>WRR（Weighted Round Robin）加权轮训调度，分比为每个队列分配不同的权重，即可实现差分服务；<br>WFQ（Weighted Fair Queueing）加权公平队列。<br>查看WRR和WFQ性能测试的论文，结论为：<br>当分组长度相同时，调度算法的行为只受不同队列优先级的影响，因而WFQ 算法退化为WRR，与WRR算法性能几乎一致；<strong><em>当分组长度不同时，ＷFＱ会有较好的时延性能，而WRR算法由于未考虑分组长度的不同而引入的不公平性，不能保证高优先级队列的低时延要求</em></strong>。</p><h2 id="华为设备拥塞避免和拥塞管理"><a href="#华为设备拥塞避免和拥塞管理" class="headerlink" title="华为设备拥塞避免和拥塞管理"></a>华为设备拥塞避免和拥塞管理</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>拥塞避免通过指定报文丢弃策略来解除网络过载，拥塞管理通过指定报文调度次序来保证高优业务先被处理。<br>什么是拥塞：由于网络资源不足造成速率下降、引入额外延时的一种显现，会造成报文传输时延、吞吐率低、及资源的大量消耗。</p><h3 id="拥塞避免"><a href="#拥塞避免" class="headerlink" title="拥塞避免"></a>拥塞避免</h3><p>拥塞避免通过监控网络资源（队列或端口缓存区）的使用情况，在拥塞发生或者有加剧趋势时主动丢弃报文，来缓解网络过载的机制。<br>拥塞避免常见的两种方式：<br><strong>-tail drop</strong>：同等对待所有报文，不对报文进行服务等级区分，发生拥塞时队列尾部数据报文将被丢弃，直到拥塞解除；（即对新到的报文全部丢弃）<br>但是该策略会引起TCP全局同步显现，所谓的TCP全局同步现象，是指当多个队列同时丢弃多个TCP连续报文时，将造成经过该设备所有TCP连接同时进入拥塞避免和慢启动状态，降低流量以解除拥塞，而后这些TCP连接又会在某个时刻同时出现流量高峰，如此反复，使网络流量忽大忽小，影响链路利用率。<br><strong>-wred</strong>：加权随机先期丢弃（Random Early Drop），基于丢弃参数随机丢弃报文，这样做的好处时，随机丢弃的报一定概率属于同一个TCP流，某些流的报文可能不被被丢弃，因此会有更少的TCP流进入半启动过程，以提升带宽利用率。</p><h3 id="TCP拥塞避免和慢启动简介"><a href="#TCP拥塞避免和慢启动简介" class="headerlink" title="TCP拥塞避免和慢启动简介"></a>TCP拥塞避免和慢启动简介</h3><p>慢启动，一个TCP连接启动的时候并不知道cwnd设置多大合适，因此TCP发送方会从一个较小的初始值按照指数增加到某一个值（慢启动门限，ssthresh），这个cwnd提升的过程就叫做慢启动。除了初始建立tcp连接后的数据使用慢启动外，在TCP超时重传、TCP空闲一段时间后重新开始数据发送，这些场景下会触发慢启动过程。具体慢启动的一些细节参照tcp/ip详解。<br>拥塞避免，从慢启动过程可以看到cwnd可以很快增长，从而最大程度利用网络带宽资源，cwnd指数增长会有一个上限叫慢启动门限，当cwnd超过这个值后就进入拥塞避免阶段。具体思路为让cwnd按照接近线性缓慢地增大，当收到delay ack时，cwnd的增长仍然接近线性，只是增长速度相对慢些。</p><h3 id="拥塞管理"><a href="#拥塞管理" class="headerlink" title="拥塞管理"></a>拥塞管理</h3><p>当发生拥塞时，通过调节报文的调度次序来满足时延敏感业务高QoS服务的一种机制。<br><strong>PQ</strong>，队列优先，会导致低优先队列饿死；（即SP，严格的队列优先）<br><strong>WFQ</strong>，加权公平队列，相对于WRR算法来说，WFQ短报文和长报文获得公平的调度，如果不同队列同时存在多个长报文和短报文发送，让短报文优先获得调度，从而总体上减<br>少各个流报文的时间差。WFQ调度在报文进入队列之前，先对流量进行分类，根据hash因子（包括ToS字段的优先级）尽可能的将不同的流放入到不同的队列中，在出队列时按照流的优先级来分配每个流应占的带宽，优先级越小分配的带宽越小，从而总体上均衡各个流的延迟。（分为按照流的优先级分裂或按照流分类）。</p><h2 id="微突发"><a href="#微突发" class="headerlink" title="微突发"></a>微突发</h2><p>微突发是指端口在非常短的时间（毫秒级别）内收到非常多得突发数据，以至于瞬时突发速率达到平均速率的十倍、百倍，甚至超过端口线速带宽的现象。由于设备监控流量颗粒度的问题，一般很难发现，但是可以从端口的dropped日志和接口下的Discard数据包中看出曾出现过微突发。<br>1、问题，为什么微突发时交换机没有上报缓存超限告警？<br>交换机获取端口缓存使用情况，只能依赖CPU的轮训机制，CPU轮训的interval比较长，探测不到。<br>2、问题，终端server的业务是随机的，不会有多大的为突发。<br>业务的随机性在微观程度可能体现非常极端的两面，一个极端是时时刻刻都有业务流量，流量总体平稳；另一个极端是一会儿有大量流量高速转发，一会儿又没数据，突发严重。业务的随机性不等于TCP发包的随机性，传统cpu的机制总是尽快抢占带宽把数据发送完，所以传统的TCP发包在微观上突发性普遍很强。同时服务器的端口带宽越高，往往突发也就越强，因此在25G环境时微突发会更普遍？<br>当微突发流量瞬时速率超过交换机的转发能力时，交换机会将突发的数据进行缓存，当交换机没有足够的缓存，那么超出的数据只能丢弃。</p><p>下面以具体例子来说明微突发的过程<br><img src="https://img-blog.csdnimg.cn/20200308000242600.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>假设port1 和 port2 同时以10Gbps的线速向port3发送5M的数据，由于port3口的速率也是10Gbps，因此会有5M的数据需要先缓存起来，假设交换机只有1M的缓存，此时会有4M的数据被丢弃，并且这个突发持续时间为5MB/10Gbps = 4ms，而目前交换机整机缓存大小为1~20MB，对于10G限速的两个端口二打一的情况，最大可承受的突发持续时间为&lt;16ms（20MB/10Gbps），实际网络中，不止二打一，对缓存消耗会更严重。</p><h3 id="微突发解决办法"><a href="#微突发解决办法" class="headerlink" title="微突发解决办法"></a>微突发解决办法</h3><p>1、端口或全局下开启：qos burst-mode enhanced 将接口下缓存管理的突发模式为增强模式。这样让业务端口共享更多芯片缓存buffer。（实测CE6800系列交换机效果显著）；<br>2、针对传统的TCP拥塞机制中存在突发严重、过渡消耗交换机缓存等问题，服务器测利用技术保证不会过渡、过快、突发国强地发包，从根源上减少微突发；<br>3、在时延可控和缓存充足的情况下，在发生拥塞的转发设备上游交换机下行接口开启流量整形，削弱流量的瞬时波峰，控制突发程度，但是此方案会导致报文转发时延加大。这个流量整形主要是通过令牌桶技术来对出端口速率做限制的，避免流量过高的从端口发出。后面配置的# qos queue * # shaping cir cbs 等是通过调整令牌桶里令牌的数量来对速率进行限制的。<br>4、网络中所有设备的接口均通过dcb pfc enable 开启流量控制功能，在转发设备发生拥塞时，通知上游设备降低转发包速率，甚至停止发包，待拥塞解除以后再恢复报文的正常发送，需要注意的是，此方案同样会带来时延增大的问题。<br>5、使用telemetry来增加对微突发的监控。<br>6、芯片层面支持对交换机丢包的实时监控，一旦芯片层面有丢包，自动通告。</p><h2 id="PFC简介"><a href="#PFC简介" class="headerlink" title="PFC简介"></a>PFC简介</h2><p>传统的Pause机制是当端口收缓到达阈值的时候，立即发送Pause帧，让对端停止发送数据，这种Pause机制不符合IP流程和RoCE流量混跑时共享链路的需求，而PFC则提供一种更细粒度的Pause控制。即 <strong><em>PFC是一种基于队列的流控机制</em></strong>，它使得发送设备的发送端口分成最多8个队列，接收端口的接收缓存也是针对每个队列区分的，因此当某个队列的缓存达到阈值时，指向该队列发送Pause帧，通知对端停止发送该队列的RoCE流量，而其他队列的流量不收影响。<br>PFC的目的是消除链路由于拥塞而出现的丢包，PFC帧的发送必须满足一定的时间要求，如果发送在自己接收队列缓存慢之后再发送PFC帧，PFC帧从发送端到接收端传输过程中，另一端由于没有足够的接收缓存而存在丢包问题，如果过早的发送会导致带宽利用率下降，因此在接收缓存中定义了一个headroom的缓存值，这部分缓存目的就是存储PFC帧传输过程中对端继续发过来的数据。<br>headroom缓存大小必须要存够一定时间内对端发过来的数据，包括：<br>1、接收数据端接收缓存达到一定阈值，产生PFC请求及PFC帧的排队时间；<br>2、PFC帧在链路中传输的时间；<br>3、PFC帧在接收端排队时间；<br>4、PFC帧在接收端处理并终止该队列发送数据的时间。<br>PFC同时也会引入其他问题：<br>1、PFC deadlock（根本原因是mac表项早于arp表项超时，目前交换机的arp表象都是绑定出接口，理论上不会出现死锁）<br>2、PFC Unfairness<br>3、Victim Flow<br>4、PFC Pause Storm</p><h2 id="ETS简介"><a href="#ETS简介" class="headerlink" title="ETS简介"></a>ETS简介</h2><p>Enhanced Transmission Selection，类似现网的QoS，将不同优先级映射到不同的priority-group，然后基于队列做带宽控制，华为引入了priority-group的概念，在IP和RDMA融合的网络上会出现三种流量，管理流量、普通的IP流量、RoCE流量，我们可以将这三种流量标记为不同的优先级，然后用PQ或者WRR进行带宽控制。<br>ETS提供了两级调度，分别基于优先级组PG（Priority Group）和优先级Priority，首先接口先对优先级组进行第一级调度，然后再对优先级内的优先级队列进行第二级调度。相对于QoS来说，ETS优势在于提供了基于优先级组的调度。<br>优先级组即一组拥有相同调度属性的端口优先级的队列，用户可以设置将不同的优先级加入到优先级组中，比如PG 15业务比较重要，对延迟比较敏感，采用PQ调度。PG0和PG1位普通业务，采用RR调度。<br><img src="https://img-blog.csdnimg.cn/20200308001528812.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>如上图所示，优先级为3的队列承载的试FCoE流量，将其放到SAN的优先级组内(PG1)，优先级0、1、2、4、5为普通业务流量，将其划入普通的LAN优先级组内（PG0），优先级7的队列为IPC流量，划入IPC优先级组内(PG15)。接口总带宽为10G，PG0和PG1分配50%的带宽，即为5G。在t1和t2时刻，接口的总带宽不超过10G，所有流量正常转发，在t3时刻内总流量超过给定的带宽，切LAN流量超过给定的5G，因此此时会有1G的LAN流量被丢弃。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>薅谷歌云羊毛</title>
    <link href="/2020/04/05/%E8%96%85%E8%B0%B7%E6%AD%8C%E4%BA%91%E7%BE%8A%E6%AF%9B/"/>
    <url>/2020/04/05/%E8%96%85%E8%B0%B7%E6%AD%8C%E4%BA%91%E7%BE%8A%E6%AF%9B/</url>
    
    <content type="html"><![CDATA[<h1 id="一、谷歌云申请"><a href="#一、谷歌云申请" class="headerlink" title="一、谷歌云申请"></a>一、谷歌云申请</h1><html ><hr> </html><p>申请网址：<a href="https://console.cloud.google.com/freetrial" target="_blank" rel="noopener">https://console.cloud.google.com/freetrial</a><br><img src="https://img-blog.csdnimg.cn/20200217014255574.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>国家/地区没有中国，随意选择吧</p><html ><hr> </html><p><img src="https://img-blog.csdnimg.cn/20200217014340665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>账号类型选择个人，姓名和地址随意填。</p><html ><hr> </html><p><img src="https://img-blog.csdnimg.cn/20200217014843313.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>需要你有支持外币的信用卡，提交后会从你信用卡里扣除1美元，验证后会退还至你的账户。</p><html ><hr> </html><p><img src="https://img-blog.csdnimg.cn/20200217015405678.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>申请完成后会收到提示获赠12个月免费试用期并包含300美元，放心用，试用期到期后不会自动续费。</p><html ><hr> </html><h1 id="创建实例并修改防火墙规则"><a href="#创建实例并修改防火墙规则" class="headerlink" title="创建实例并修改防火墙规则"></a>创建实例并修改防火墙规则</h1><p><img src="https://img-blog.csdnimg.cn/20200217020212721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020021702005285.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>配置信息参照 <strong><em>区域选择香港</em></strong>、<strong><em>机器类型选择最低配</em></strong>、<strong><em>系统选择CentOS7</em></strong>、<strong><em>防火墙勾选允许HTTP、HTTPS</em></strong>。</p><html ><hr> </html><h1 id="配置系统并安装BBR和SSR"><a href="#配置系统并安装BBR和SSR" class="headerlink" title="配置系统并安装BBR和SSR"></a>配置系统并安装BBR和SSR</h1><h3 id="第一步配置ssh"><a href="#第一步配置ssh" class="headerlink" title="第一步配置ssh"></a>第一步配置ssh</h3><p>vm实例创建完毕后，点击“连接”-“在浏览器窗口中打开”<br><img src="https://img-blog.csdnimg.cn/20200217021028801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>输入以下命令：</p><pre><code class="bash"># 切换至root，修改root密码sudo su -passwd *****## 开启root密码验证，并重启机器或重启sshd服务，方便远程管理sed -i &#39;s/PermitRootLogin no/PermitRootLogin yes/g&#39; /etc/ssh/sshd_config;sed -i &#39;s/PasswordAuthentication no/PasswordAuthentication yes/g&#39; /etc/ssh/sshd_config;reboot#</code></pre><html ><hr> </html><h3 id="第二步安装：BBR"><a href="#第二步安装：BBR" class="headerlink" title="第二步安装：BBR"></a>第二步安装：BBR</h3><p>BBR是Google开发的新的TCP拥塞控制算法，有利于提升服务器带宽吞吐、降低延迟，感兴趣的同学可以研究下原理：<br><a href="https://cloud.tencent.com/developer/article/1369617" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1369617</a></p><pre><code class="bash"># 安装wgetyum install wget -y## 安装bbrwget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.shchmod +x bbr.sh#</code></pre><p><img src="https://img-blog.csdnimg.cn/20200217031159496.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>按任意键开始安装，安装脚本包含升级内核的操作，可能需要几分钟，耐心等待，安装完成后需要重启虚机。</p><html ><hr> </html><h3 id="第三步：安装SSR"><a href="#第三步：安装SSR" class="headerlink" title="第三步：安装SSR"></a>第三步：安装SSR</h3><pre><code class="bash">#wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks-all.sh#chmod +x shadowsocks-all.sh#./shadowsocks-all.sh 2&gt;&amp;1 | tee shadowsocks-all.log#</code></pre><p>按照提示信息进行安装，推荐以下加密和混淆方式。</p><pre><code class="bash">Which Shadowsocks server you&#39;d select:1) Shadowsocks-Python2) ShadowsocksR3) Shadowsocks-Go4) Shadowsocks-libevPlease enter a number (Default Shadowsocks-Python):2You choose = ShadowsocksRPlease enter password for ShadowsocksR(Default password: teddysun.com):******password = ******Please enter a port for ShadowsocksR [1-65535](Default port: 13202):19000port = 19000Please select stream cipher for ShadowsocksR:1) none2) aes-256-cfb3) aes-192-cfb4) aes-128-cfb5) aes-256-cfb86) aes-192-cfb87) aes-128-cfb88) aes-256-ctr9) aes-192-ctr10) aes-128-ctr11) chacha20-ietf12) chacha2013) salsa2014) xchacha2015) xsalsa2016) rc4-md5Which cipher you&#39;d select(Default: aes-256-cfb):11cipher = chacha20-ietfPlease select protocol for ShadowsocksR:1) origin2) verify_deflate3) auth_sha1_v44) auth_sha1_v4_compatible5) auth_aes128_md56) auth_aes128_sha17) auth_chain_a8) auth_chain_b9) auth_chain_c10) auth_chain_d11) auth_chain_e12) auth_chain_fWhich protocol you&#39;d select(Default: origin):3protocol = auth_sha1_v4Please select obfs for ShadowsocksR:1) plain2) http_simple3) http_simple_compatible4) http_post5) http_post_compatible6) tls1.2_ticket_auth7) tls1.2_ticket_auth_compatible8) tls1.2_ticket_fastauth9) tls1.2_ticket_fastauth_compatibleWhich obfs you&#39;d select(Default: plain):6obfs = tls1.2_ticket_authPress any key to start...or Press Ctrl+C to cancel</code></pre><p>按任意键开始安装，可能需要几分钟，耐心等待。<br><img src="https://img-blog.csdnimg.cn/202002170330002.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>当出现以下提示时安装成功。</p><h1 id="客户端安装"><a href="#客户端安装" class="headerlink" title="客户端安装"></a>客户端安装</h1><p>Windows&amp;iOS下使用shadowsocks即可。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>钢琴入门</title>
    <link href="/2020/04/05/%E9%92%A2%E7%90%B4%E5%85%A5%E9%97%A8/"/>
    <url>/2020/04/05/%E9%92%A2%E7%90%B4%E5%85%A5%E9%97%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="什么是钢琴"><a href="#什么是钢琴" class="headerlink" title="什么是钢琴"></a>什么是钢琴</h2><p>钢琴（Piano forte）由意大利人巴托罗密欧·克里斯托弗里于1709年发明，钢琴属于键盘乐器，用琴键牵动包裹绒毡的琴锤敲打钢丝弦发出声音。<br><strong>钢琴发展史</strong><br><strong>1、羽管键琴</strong>（拨弦古钢琴或大键琴），发声原理类似于吉他，用机械传动装置带动一个拨弦的小臂，由羽管博定琴弦，缺点是没办法控制力度，音量总是一样的大小。<br><strong>2、击弦古钢琴</strong>（小键琴），用铜楔槌击打琴弦，楔槌不是立即离开琴弦，而是保持在弦上的压力，直到手指离开琴键，因此击弦古钢琴可以用手指去控制音量，但效果细微，并且声音很小。<br><strong>3、现代钢琴</strong>，1709年意呆利人克里斯托弗里制造的以琴锤敲打琴弦的键盘乐器，它和小键琴的最大区别是，琴锤敲击琴弦后会立即弹开，使琴弦持续振动，直到手指离开琴键，可以迅速重复地击键。现代钢琴外形上主要分为直立式钢琴和三角钢琴，三角钢琴是钢琴最原始的形态，立式钢琴的琴弦交错安装，节省空间。<br><strong>钢琴基本构成</strong><br>钢琴由琴弦、音板、琴锤、键盘系统（52个白键、36个黑键）、踏板、击弦机组成。<br><strong>音板（Sound Board）</strong>：连着调音钉，紧贴着琴弦，当琴弦振动，音板会使声波高效率耦合到空气中，声音被扩大。<br><strong>琴锤</strong>：包括着绒毡的琴锤，用来敲打琴弦。<br><strong>击弦机</strong>：用于连接琴键和琴锤。<br><strong>踏板</strong>：分为<strong>延音踏板</strong>和<strong>柔音踏板</strong>，延音踏板为右踏板，为增音器，当延音踏板被压下，平时压着的制音器立即扬起，是所有琴弦延续振动，方放开踏板，制音器又全部压在琴弦上制止发音。柔音踏板为左踏板，踩下柔音踏板，在平台式钢琴里，琴锤会立即向旁边推移使音量减少，声音变得轻柔；立式钢琴琴锤则会靠近琴弦，减轻冲力，进而使音量变小。</p><h2 id="认识钢琴键盘"><a href="#认识钢琴键盘" class="headerlink" title="认识钢琴键盘"></a>认识钢琴键盘</h2><p><strong>钢琴琴键图</strong><br><img src="https://img-blog.csdnimg.cn/20200313200005527.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>说明：除去左边三个键，每5个黑键对应7个白键，7个白键对应7个音，dol re mi fa sol la si，共7组，因此第个dol为最中间的dol，这个dol也称为中央C。<br><strong>以下简谱、唱名、音名</strong><br><img src="https://img-blog.csdnimg.cn/20200313200038751.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>键盘和唱名对应关系</strong><br>以Dol键为例，对应音名为：C- - -，C- -，C-，中央C，C+，C++，C+++。</p><p><strong>坐姿</strong></p><p>钢琴坐姿要面对这个中央C，坐琴凳的前1/3，身体和琴键距离大概2拳。</p><h2 id="认识五线谱"><a href="#认识五线谱" class="headerlink" title="认识五线谱"></a>认识五线谱</h2><p>先介绍<strong>简谱</strong>，简谱两种分为<strong>字母简谱</strong>和<strong>数字简谱</strong>，1、2、3、4、5、6、7音节中的七个基本级对应着 dol re mi fa sol la si，一般用在民族乐器中，比如古筝、二胡、葫芦丝、竹笛。</p><p><strong>简谱示意图</strong><br><img src="https://img-blog.csdnimg.cn/20200313200204594.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><strong>五线谱</strong>：也就是小蝌蚪，最早发源地是希腊，比数字型的简谱早的多，一般用在西洋乐器，比如大提琴、小提琴、长管、长笛。</p><p><strong>五线谱示意图（Musical Notation）</strong><br><img src="https://img-blog.csdnimg.cn/2020031320023036.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>线和间不够用的时候，可以在许五线谱上方或下方增加线和间，分别称为上加第1线，下加第1间等。<strong>高音谱号</strong>也叫G谱号，<strong>低音谱号</strong>也叫F谱号，五线谱表有高音谱表、低音谱表和中音谱表。<br><img src="https://img-blog.csdnimg.cn/20200313200250218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>高音谱表下加一线和低音谱表的上加一线称为中央C dol，由音符和线构成，中央C的线刚好穿过音符。<br><strong>音符</strong><br><img src="https://img-blog.csdnimg.cn/20200313200312448.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="简谱-amp-五线谱时值"><a href="#简谱-amp-五线谱时值" class="headerlink" title="简谱&amp;五线谱时值"></a>简谱&amp;五线谱时值</h2><p><strong>音符</strong>：音符椭圆形的部分称为“符头”，有实心和空心两种；直线部分为符干；上方发射出形似波浪的部分称为“符尾”。<br><strong>音符时值</strong>：也称作音符值或音量，用来表示各音符之间的相对持续时间。也就是手指按下键盘持续的时间。<br><img src="https://img-blog.csdnimg.cn/20200313200400312.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>全音符</strong>：只有一个空心的符头；也是唯一没有符干的音符。<br><strong>四分音符</strong>：实心音符+符干，对应时值为一拍（表示手的一下一上所消耗的时间）。</p><p>音符组成部分越来越少，代表时间越来越长。<br>推荐节拍器app：<strong>metronome</strong></p><h2 id="休止符和附点音符"><a href="#休止符和附点音符" class="headerlink" title="休止符和附点音符"></a>休止符和附点音符</h2><p><strong>休止符</strong>：用以记录不同长短音的间断时值得符号。方便记忆：全休止在dol的天花板上，二分休止在dol的地上，四分休止类似闪电。<br><img src="https://img-blog.csdnimg.cn/20200313200510503.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>附点音符</strong>：记在音符或休止符右侧的小圆点，表示需要演奏的音符一半的时长。<br><img src="https://img-blog.csdnimg.cn/2020031320054192.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="常见节奏型"><a href="#常见节奏型" class="headerlink" title="常见节奏型"></a>常见节奏型</h2><p><img src="https://img-blog.csdnimg.cn/20200313200605495.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>这个× 读成“哒”；节奏型指的是一个拍内不同音符构成；大附点是两拍，小附点是一拍；第1个为大切分，2至4为大切分的变种，第5个为小切分。</p><h2 id="全音半音和变音记号"><a href="#全音半音和变音记号" class="headerlink" title="全音半音和变音记号"></a>全音半音和变音记号</h2><p><strong>1、全音和半音的概念</strong><br>在音乐体系中音列中，相邻的两个音之前最小的距离叫<strong>半音</strong>，两个半音距离构成一个<strong>全音</strong>。<br>相邻两个琴键（包括白键和黑键）构成全音，相隔一个琴键的两键之间构成半音。<br>因此mi到fa、si到dol为半音，其余全部为全音，所以一组键从左到右为：全全半全全全半。<br><strong>2、变音记号</strong><br>把固定的音升高或者降低叫“<strong>变化音</strong>”用来表示这种变化的符号叫“<strong>变音符号</strong>”。总共有五种变音符号。<br><strong>2.1、升号&amp;降号</strong><br><img src="https://img-blog.csdnimg.cn/20200313200721145.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>升号和降号写在一个符号的左上方，表示升高或者降低半音，即向右或者向左找相邻的键，但是由于升mi就是fa了，谱表中不会这么写，所以遇到升号和降号只需要找黑键即可。我们发现升dol和降re是同一个键，此时升dol和降re这两个音称作等音。<br><strong>注意</strong>：升号和降号（所有变音符号都适用）的作用域是以节为单位的，当某个音升高或降低时，该小节内相同的音也必须要升或者降，哪怕小节内该音左上角没标升号或降号。<br><strong>2.2、重升号&amp;重降号</strong><br><img src="https://img-blog.csdnimg.cn/20200313200755749.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>重生号和重降号表示升高或降低全音，比如dol的重升音就是re，这里必然会有疑问，那为啥不直接写成re咯？这个具体原因等讲到和弦就会明白，有时候这个音只能叫做重升dol而不能叫re，否则和弦就不对了。<br><strong>2.3、还原号</strong><br><img src="https://img-blog.csdnimg.cn/20200313200818683.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>这个就比较容易理解了，由于小节内相同的音前面变音后，后面相同的音也必须要跟着变，还原号的作用是取消前面的变音，直接弹奏该音即可。<br><strong>变音符号的记谱方法</strong><br><img src="https://img-blog.csdnimg.cn/20200313200845129.png" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="连音线"><a href="#连音线" class="headerlink" title="连音线"></a>连音线</h2><p>连音线分为三种：1、连音线、圆滑线、三连音。<br><strong>1、连音线</strong><br>表示将两个或两个以上音用弧线连起来，表示后面音的时值要合并到第一个音的时值之中来演奏。也就是说只需要弹奏第一个音，后面被被连得音不用弹，也就是只需要把后面音的时间给第一个音即可，相当于延音。<br><img src="https://img-blog.csdnimg.cn/20200313200948775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>如上图所示，两个sol音，第一个弹奏半拍，第二个弹奏一拍半。这里有个疑问，第二个一拍半的sol完全可以用附点四份dol来代替啊，为啥非要用连接线将dol的八分音符和四分音符连接起来呢？这里有个场景，比如存在跨小节弹奏的时候两个音符之间有小节线，此时就没有办法用附点来代替连音线了。<br><strong>2、圆滑线</strong></p><p>表示将两个或两个以上不同音高的音用弧线连起来，表示这些音要被弹奏的连贯流畅、一气呵成。<br><img src="https://img-blog.csdnimg.cn/20200313201022915.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>3、三连音</strong><br>三个音要弹奏两个音的长度，比如下图中的mi、fa、mi，如果没有三连音，总共需要弹奏一排半的，当用三连音连起来后则需要弹奏一拍，即有一个音的时值被混在另外两个音里面了。三连音的作用一般表示转折或者强调，给人节奏错位的感觉。<br><img src="https://img-blog.csdnimg.cn/20200313201052112.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="和弦"><a href="#和弦" class="headerlink" title="和弦"></a>和弦</h2><p>和弦：按照三度关系排列起来的三个以上的音的结合。<br>三和弦由根音、三音、五音构成。<br>三和弦分类：<br>带补充</p><h2 id="音程、音数、度数"><a href="#音程、音数、度数" class="headerlink" title="音程、音数、度数"></a>音程、音数、度数</h2><p><strong>音程</strong>：两个音级在音高上的相互关系；在音程中，上方的音叫做冠音，下方的音叫做根音，只需要看根音和冠音的距离即可判定这个音程。<br>音程可分为旋律音程、和声音程。<br><strong>和声音程</strong>：是指两个音同时发响；旋律音程是指两个音一前一后发响。<br><strong>半音</strong>：每两个挨着的键；<strong>全音</strong>：每隔一个音叫全音。<br>不同的音程结构构成了不同的音程名称，音程的名称是由音数和度数构成。<br><strong>度数</strong>：从根音到冠音所包含的音级数目（在五线谱上包含的线间的个数）。五线谱上的每条线或每个间称为一度，两个音同在一条线上或者同在一个间里，这两个音的音程关系叫做“一度”，相邻则称之为“二度”。<br><strong>音数</strong>：音符之间包含的半音和全音数目之和。半音的音数为：1/2；全音的音数为：1。<br>对比度数和音数的概念会发现：度数只关心五线谱相隔多少个线间，音数才关心变音的数目。<br>度数和音数共同构成音程的名称，包含了一个半音的三度称之为<strong>小三度</strong>（1又二分之一个音数）；全部都是全音的三度称之为<strong>大三度</strong>（2个音数），其中一度、四度、五度、八度，只包含一种音数，没有大小之分，只有<strong>纯</strong>。二度、三度、六度、七度，包含两种音数，要用大小来表示。<br><img src="https://img-blog.csdnimg.cn/20200313201302362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h2 id="C调卡农弹奏技巧"><a href="#C调卡农弹奏技巧" class="headerlink" title="C调卡农弹奏技巧"></a>C调卡农弹奏技巧</h2><p><strong>卡农简介</strong><br>卡农（Canon）是一种谱曲方式，并不是一首具体的曲子，比如两只老虎就是一首标准的卡农。卡农几段相同的旋律在时间上逐次展开，又在具体的时间上相互配合，产生新的听觉效果，由于多个声部地位均衡，往往会产生奢华优雅的效果，是巴洛克音乐中相当常见的题材。</p><p>帕赫贝尔版《D大调卡农》（Canon in D Major，Johann Pachelbel）是卡农作品中的经典作，旋律优美，接受度极高，可以说是被音乐会、婚礼、各种感情剧用烂的曲子，虽然烂大街但精髓、功底和时代标签都是非常深刻的。</p><p><strong>第一部分</strong><br><img src="https://img-blog.csdnimg.cn/20200313201344214.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>第二部分</strong><br><img src="https://img-blog.csdnimg.cn/20200313201352460.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>第三部分</strong><br><strong>注意</strong>：刚开始左右C-，右手C+，这三行都是每行换一次延音踏板。<br><img src="https://img-blog.csdnimg.cn/20200313201402203.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>第四部分</strong><br><strong>注意</strong>：该小节只换一次延音踏板，可以先练手右手部分，全曲左手部分是相同的。<br><img src="https://img-blog.csdnimg.cn/20200313201545764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>卡农右手部部分讲解</strong><br>dol si dol dol（最后一个中央Cdol先不要把手换到中央C位，而是直接跨度大些弹，然后再换手位）<br>si sol re mi<br>dol dol si la （第二个C+ dol也是跨度大些去弹）<br>si mi sol la（第一个si用大拇指去弹，弹完之后再换到C+位）<br>fa mi rel fa (还是C+位)<br>fa mi dol si（C+位弹完fa后再用无名指弹si，然后变到F位）<br>la sol fa mi（依次弹，mi用中指过去弹）<br>dol fa mi dol（依次弹）</p><p>C调卡农最简版：<br><a href="https://www.bilibili.com/video/av96913966/" target="_blank" rel="noopener">https://www.bilibili.com/video/av96913966/</a></p><p>天空之城主题曲《伴随着你》：<br><a href="https://www.bilibili.com/video/av96911805/" target="_blank" rel="noopener">https://www.bilibili.com/video/av96911805/</a></p><p>千余千寻结尾区《Always with me》：<br><a href="https://www.bilibili.com/video/av96913380/" target="_blank" rel="noopener">https://www.bilibili.com/video/av96913380/</a></p><p>《梦中的婚礼》最简版：<br><a href="https://www.bilibili.com/video/av96912411/" target="_blank" rel="noopener">https://www.bilibili.com/video/av96912411/</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>房奴们你在想peach</title>
    <link href="/2020/04/05/%E6%88%BF%E5%A5%B4%E4%BB%AC%E4%BD%A0%E5%9C%A8%E6%83%B3peach/"/>
    <url>/2020/04/05/%E6%88%BF%E5%A5%B4%E4%BB%AC%E4%BD%A0%E5%9C%A8%E6%83%B3peach/</url>
    
    <content type="html"><![CDATA[<h1 id="央行公告"><a href="#央行公告" class="headerlink" title="央行公告"></a>央行公告</h1><p>2019年12月28日央行发布有关存量房贷利率转换LPR的公告，原文如下：<br><img src="https://img-blog.csdnimg.cn/20200301221257696.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>根据上述公告，存量浮动利率贷款定价基准转换方式有两种，一种是将原合同约定的利率定价方式转换为LPR加点形成的浮动利率，一种是转换为固定利率，对于我们广大房奴来说，我们只关注5年及以上的LPR利率未来走向即可，<strong><em>需要弄明白LPR利率是如何走的</em></strong>。</p><h2 id="LPR报价成员"><a href="#LPR报价成员" class="headerlink" title="LPR报价成员"></a>LPR报价成员</h2><p><img src="https://img-blog.csdnimg.cn/20200301222742304.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>LPR保价成员包含中国的大小银行，同时也包括网络银行、外商独资银行，覆盖面比较全，但是根据历史数据，国有四大银行才是房贷的大头，占中国房贷总额的75%左右（数据来源：21世纪经济报道）</p><h2 id="LPR利率怎么报价"><a href="#LPR利率怎么报价" class="headerlink" title="LPR利率怎么报价"></a>LPR利率怎么报价</h2><p>央行关于LPR（贷款基准利率，Loan Prime Rate）定义如下：按公开市场操作利率（<strong><em>主要指中期借贷便利利率</em></strong>）加点形成的方式，向全国银行间同业拆借中心报价。全国银行间同业拆借中心按去掉最高和最低报价后算术平均的方式计算得出贷款市场报价利率。<br>根据上述陈述，可以看出LPR利率 <strong><em>主要</em></strong> 参照中期借贷便利利率，也就是麻辣粉（MLF, Medium-term Lending Facility）。新政策中规定的房贷利率=五年以上LPR+人行加点数+18家银行报平均点数。LPR主要是参照麻辣粉定义的，那么麻辣粉的利率是怎么定义的？<br>麻辣粉央行规定的利率最长期限为一年，不像房贷利率那样最长期限为五年，一年期的LPR利率=一年的麻辣粉利率+加点。以2020年2月17日央行公布了MLF的中标利率为3.15%，2月20日的一年期LPR报价利率（按月公布）为4.05%，根据上述公式可以得出，LPR(4.05%)=MLF(3.15)+加点(0.9%)，加点为0.9%。那么根据一年期LPR利率生成五年期LPR，截止到2月20日公布的5年期LPR利率为4.75%。</p><h2 id="你的贷款从哪里来的"><a href="#你的贷款从哪里来的" class="headerlink" title="你的贷款从哪里来的"></a>你的贷款从哪里来的</h2><p>你的钱是从商业银行贷款来的，那么商业银行的钱从哪里来？商业银行自己不能印钞，只是一个货币中介，最基本的业务是吸收存款，发放贷款，利用利率差价来获得利润。<br>商业银行的钱大部分来自社会的存款，中国银行2020年2月13日存款、贷款利率如下<br><em>存款</em><br>活期：1.35%<br>一年：1.75%<br>两年：2.25%<br>三年：2.75%<br>五年：2.75%（注意三年和五年利率一样）<br><em>贷款</em><br>一年及以内：4.35%<br>一年至五年：4.75%<br>五年以上：4.9%<br>一年贷款与存款的利差为2.6%，五年利差为2.15%<br>此时有一个问题，如果一家银行的贷款总额超过存款总额怎么办？<br><em>商业一般有两种途径</em><br>1、同业拆解：找其他银行借；<br>2、货币政策机构：找央妈借。<br><em>央妈的钱从哪里来？</em><br><strong>1、公开市场业务；</strong><br><strong>2、存款准备进业务；</strong><br><strong>3、中央银行贷款；</strong><br><strong>4、利率政策；</strong><br>5、常备借贷便利；<br>6、中期借贷便利；<br>7、抵押补充贷款；（主要针对棚改贷）<br>8、定向中期借贷便利。<br>前四点属于央行的放水工具，也和我们房贷息息相关。</p><h3 id="公开市场业务"><a href="#公开市场业务" class="headerlink" title="公开市场业务"></a>公开市场业务</h3><p>涉及房贷相关的交易品种有回购交易，回购分为正回购和逆回购，正回购是央行向一级交易商卖出证券，换取人民币，进而收紧流动性；逆回购是买入证券，以此投放货币，增加货币供应。回购的日期一般为短期行为，主要包括1天（隔夜拆借）、7天、14天。<br>还有一个叫做央票，属于中央银行自己发行的短期债券，我们知道每一笔美元流入到中国，中国央行必须要增发7块钱的人民币，这会造成国内通货膨胀，于是靠增发央票来抵消通货膨胀。还有一个作用，比如央行向香港市场投放多少央票，这个本质上是从离岸市场借人民币，（离岸和在案是指人民币交易的区域是否在大陆，岸的意思就是大陆），减少离岸市场人民币的流通数，以此来增加做空人民币的成本，维持离岸人民币汇率的稳定。</p><h3 id="存款准备金（Bank-Reserve）"><a href="#存款准备金（Bank-Reserve）" class="headerlink" title="存款准备金（Bank Reserve）"></a>存款准备金（Bank Reserve）</h3><p>这个是指银行收取社会的存款，不能全部投放到市场上，需要交出一部分到央行，万一该银行遇到挤兑，央行会把这部分钱还回去。2020年1月6日最新存款准备金率为10.5%，但这部分钱央行并不百拿，央行是需要支付一定利息的，这个利息叫做存款准备金利率。我们经常听到央妈的降准，意思就是央行向银行投放存款准备金，银行拿着这部分钱就会去投资，同时银行应对挤兑的能力也会减弱，存款准备金主要作用是保证银行资金流动性及调控银行的信贷业务。</p><h3 id="常备借贷便利（酸辣粉，Standing-Lending-Facility）"><a href="#常备借贷便利（酸辣粉，Standing-Lending-Facility）" class="headerlink" title="常备借贷便利（酸辣粉，Standing Lending Facility）"></a>常备借贷便利（酸辣粉，Standing Lending Facility）</h3><p>这个是央行正常的流动性共给渠道，主要是满足金融机构期限较长的大额流动性需求，主要对象是政策性银行和全国性商业银行，期限为1~3个月，必须以 <strong><em>抵押方式</em></strong> 发放，抵押品可以为高信用评级的债券及优质的信贷资产。<br><em>这里注意下，前面将的回购是央行主动找银行来借钱，常备借贷便利是银行主动找央妈借钱。</em></p><h3 id="中期借贷便利（麻辣粉，Medium-term-Lending-Facility）"><a href="#中期借贷便利（麻辣粉，Medium-term-Lending-Facility）" class="headerlink" title="中期借贷便利（麻辣粉，Medium-term Lending Facility）"></a>中期借贷便利（麻辣粉，Medium-term Lending Facility）</h3><p>央行提供中期基础货币的货币政策工具，对象为符合宏观审慎管理要求的商业银行、政策性银行、可通过 <strong><em>招标方式</em></strong> 展开。（注意和常备借贷便利的抵押方式借出不同）。所谓招标方式的解读，我们知道央行是不能直接参与市场的，比如一家银行没钱了，通过同业拆解方式没筹到钱，同行都不愿意借给他，此时央妈才能成为最后的借款人。这里有个疑问为什么同行都不借钱给他，这是因为这家银行借钱时提供的抵押物和提供的利率时不匹配的，哪家银行会借给他钱？所以一旦看到哪家银行找央妈去借中期借贷便利，说明这家银行业务不容乐观，现金流越来越吃紧了。<br>麻辣粉一般结款周期为6个月、1年，相对于常备借贷便利时间较长，尤其是一年借贷便利，完全影响到一年贷款基准利率。<br>最近一年央行麻辣粉投放与回笼金额（数据来中国外汇交易中心）<br><img src="https://img-blog.csdnimg.cn/20200302001612358.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>近五六年中期借贷利率数据统计<br><img src="https://img-blog.csdnimg.cn/20200302002548741.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200302002250180.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p>PS：补充2020年1月麻辣粉余额：39900亿元（数据来源中国人民银行官网）</p><p>根据上图我们发现中期借贷便利投放时限越来越长，最后直接取消三个月和六个月的，只有一年期限。换句话说银行通过同业拆解越来越筹不到钱，银行提供的抵押太差，利息太低，最后只有央妈接盘，在换句话说，中国整个银行体系资金缺口越来越大，坏账越来越多。不得已借的期限越来越长。<br>我们再看麻辣粉利率趋势，从2016年2月第一次出现一年期麻辣粉至今，利率总体是上涨然后稳定在3.3%，只在最近要挂钩房贷时降了0.5%。<br>这里注意了，<strong><em>降准、降息和麻辣粉利率完全不是一个概念</em></strong>。<br>具体规律如下：<br>一、央行投放的期限越来越长；<br>二、投放的货币余额2018年9月达到波峰，之后下降，目前处于上升期；<br>三、一年期MFL利率逐步上长；<br>四、开始允许商业银行运用降准资金回补到麻辣粉资金。比如2018年4月，这句话的意思是，商业银行拿央妈借的钱来还借央妈的钱，这么一听没毛病，但是这么做却丧失了存款准备金对冲风险的能力。<br>目前房贷直接挂钩麻辣粉利率，而不是挂钩社会吸收存款的利率，说白了也就是你借银行的钱的利率直接和银行借央妈的钱的利率挂钩，大家可以分析下这样做是否合乎有利于中国金融系统的发展？</p><p>2018年6月1日中国人民银行决定扩大麻辣粉担保品范围的通知（数据来源:<a href="http://www.gov.cn）" target="_blank" rel="noopener">www.gov.cn）</a><br><img src="https://img-blog.csdnimg.cn/20200302005836423.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>前面提到了找同行借钱的同业拆解，这里也有个利率叫做Shibor（Shanghai Interbank Offered Rate）利率，看下一年期Shibor利率（数据来源Shibor官网）<br><img src="https://img-blog.csdnimg.cn/20200302012351976.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>我们发现大概在2018年年中Shibor利率开始大幅降低，远高于同期的麻辣粉利率，贸易战开启初期（18年7月）Shibor利率出现过低于MLF利率，但后期又小幅上涨反超MLF利率，从2019年1月初至今Shibor利率一直低于麻辣粉利率，现在则是历史最低2.735%（2020年2月28日数据）。找央妈借钱更贵了，于是大家都找同业借钱了，这里从中期借贷便利余额可以看出，从2018年9月（贸易战刚开始）余额（指已借出未偿还的金额）达到顶峰后便开始下降的原因，央妈当然不乐意了，于是颁布政策：新房、存量房贷款挂钩麻辣粉！！！但是如果各大银行的钱越来越少，Shibor利率必然会上涨，一旦大于麻辣粉利率，那么银行又会回去找央妈借钱了，那么如果你是央妈你会选择怎么做？—抬高麻辣粉利率！<br>我们再来看下全球央行基准利率，美国基准利率为：1.5%至1.75%（2020年1月1日最新数据，注意美国公布的是同业拆解利率，各行真实的存款利率会有偏差），中国基准利率为1.5%（2018年7月12日最新数据），从数据不难看出，如果中国的基准利息低于美国一定幅度，结果你自己知道，虽然中国也出了相关政策，没人每年最多5w美金的外汇额度，但对于有门路的人总能想到办法，所以央妈不可能在继续降低基准利率了。</p><h1 id="回到LPR挂钩房贷"><a href="#回到LPR挂钩房贷" class="headerlink" title="回到LPR挂钩房贷"></a>回到LPR挂钩房贷</h1><p><img src="https://img-blog.csdnimg.cn/2020030202010861.PNG?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>商业银行资金最主要来源是吸收存款，然后向社会贷款，私人贷款这里主要是指个人房贷，现在LPR直接和房贷挂钩。其目的是什么？<br>截止到2019年11月中国国内存款（个人+单位）总数达到了117万亿人民币，远高于同期麻辣粉余额（3.56万亿人民币）。银行吸收这么多存款是要支付利息的，如果麻辣粉利息继续降低，LPR利率也降低，这么搞对于新增房贷没问题，两边同时降低，银行不吃亏。如果存量房房贷利率降低，此时基准利息不会再降了，银行拿什么来偿还社会的存款利息？</p><h1 id="结尾语"><a href="#结尾语" class="headerlink" title="结尾语"></a>结尾语</h1><p>现在中国的基准利率为1.5%不可能再降了，不明白原因的请会看，房贷和麻辣粉挂钩是在中美贸易战背景下刺激经济的政策，我们广大的房奴不要有房贷挂钩LPR后还的房贷会降低的幻想！</p><p>贸易战中国妥协的话，此时国家必定会收紧社会资金，避免债务全面暴雷，此时麻辣粉利率上涨，带动着LPR的上涨，我们广大房奴们自然要多掏腰包。</p><p>如果中美谈崩，美国继续大规模加税，国内债务危机爆发（所谓债务危机是指借了钱了还不了了，归根结底是换不了从央行借的钱了，后果就是通货膨胀，物价飞涨），高中我们都学过应对通货膨胀的一种措施是大规模加息，我们广大房奴们又得多掏腰包哦~ (●’◡’●)</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Noction White-Paper</title>
    <link href="/2020/04/05/Noction%20White-Paper/"/>
    <url>/2020/04/05/Noction%20White-Paper/</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>本片文章来自Noction白皮书部分节选，感兴趣的可以先google下why bgp is not enough这边文章。</p><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>企业或者ISP需要部署关键应用，比如电子商务、VoIP、媒体流遇到独特的网络挑战，客户需要7*24h不间断的网络服务，潜在的消极的经济影响由于多G的流量被错误路由，低时延和复杂的配置。</p><p>互联网具有大量的网络路径，通过运行BGP协议的路由器互联，到达同一个路径具有很多条路径，BGP通过一个复杂的算法计算出最佳路径，然而算法并没有考虑网络性能因素和链路代价，度量值。经常将流量路由到拥塞或者更贵的路径上，BGP选择最小数量网络去传送。</p><p>网络工程师试图增加额外的链路提供上来解决这些问题，被动的增加和使用路由策略，和通过人工干预，这样增加了工程师更多的时间来处理。多归属提供冗余链路避免宕机时间，但是这样并没有解决链路提供商内部中间骨干链路类似拥塞先关的问题。</p><p>IRP平台部署在网络边缘位置，通过分析流量去探测网络拥塞黑洞，影响网络路由去探测所有提供者链路一系列特定的度量，比如延迟和丢包率，为了去重新将流量路由到最佳性能的路径上，另外IRP通过将出向流量分发到低廉的链路上来显著减少带宽费用，并且在此期间可以预测到数据传送的性能。</p><p>IRP平台增加多宿主路由决策因素，使得公司在现存的基础设施情况下，使得传送网络质量提升，优化现存网络互连能力，并减少对网络的变更。</p><p>麻蛋，看到这还没切入重点。<br>。。。网络架构师需要想到更多解决方案而不是靠人肉或堆资源来处理这些问题<br><img src="https://img-blog.csdnimg.cn/20200319132432862.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>在BGP多归属场景下，由于BGP自身的选路原则，将会选择路径最短（as层面），但是这条链路可能拥塞。</p><p>由于BGP选路计算时并没有考虑丢包率、延迟、吞吐、链路承载能力，和拥塞，历史可靠性等其他对业务非常重要，但BGP并没有考虑的因素，也没办法通过以上参数来进行路由。</p><p>许多网络架构师，将BGP视为一种到达目的路径的倒换手段，当上游链路故障时作为一个候选的路径。</p><p>既然BGP关注可达性和自身的稳定性，只有当故障非常严重，比如已经完全不可达了或者管理员改变策略后，BGP才会重新路由，BGP并不会考虑降级，只有可用和不可用两个选择。由于网络的拥塞和黑洞，网络表现仍然是不可预期的。</p><p>还没切入重点。。。</p><h3 id="How-It-Works"><a href="#How-It-Works" class="headerlink" title="How It Works"></a>How It Works</h3><p>网络中部署IRP之后，IRP去获取关于一个端口的完整镜像或者部分采样，通过sFlow/Netflow。IRP被动分析特定网络异常，主动去测量相关前缀的丢包率、延迟、网络震荡。该平台通过向所有运营商提供的链路分发探测来获取收集这些度量值，然后将这些收集到的数据吐给平台核心，然后计算一个性能更优，代价更优路由策略。平台BGP代理程序通过传统的BGP session和网络边缘设备直接通信。</p><p>IRP平台是一个旁路部署的，并且并不承载任何业务流量，同时即便BGPd功能被关闭了，该平台还可以只充当监控功能。</p><h3 id="Performance-Improvements"><a href="#Performance-Improvements" class="headerlink" title="Performance Improvements"></a>Performance Improvements</h3><p>IRP允许工程师主动去执行策略，可以手动决定具体走哪条链路。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>RFC7348（VxLAN）介绍</title>
    <link href="/2020/04/05/RFC7348%EF%BC%88VxLAN%EF%BC%89%E4%BB%8B%E7%BB%8D/"/>
    <url>/2020/04/05/RFC7348%EF%BC%88VxLAN%EF%BC%89%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<p>title: RFC7348(VxLAN)介绍</p><p>﻿注意：由于RFC7348只是对vxlan做简单定义，并没有详细部署方案，更详细的请参照各设备厂商官方手册。</p><h1 id="背景介绍"><a href="#背景介绍" class="headerlink" title="背景介绍"></a>背景介绍</h1><p>服务器虚拟化对物理网络设施提出了更高的需求，一台物理机包含多台vm，每台vm都有自己的mac地址，这就要求交换机有非常大的mac地址表象来存储。传统网络中，不同租户vm需要依靠vlan来进行隔离，而目前vlan数目被限制在4096个。DC需要满足不同的租户，不同租户需要有独立的网络域，不同租户的mac地址、vlan、IP规划需要相互独立。此时还要求DC内存在一个大二层的环境，STP技术提供防环的同时也disable很多链路，即便最新方案中网工都倾向于使用三层技术来实现ecmp技术，但还是需要使用二层来支持vm间的通信。<br>以上场景提出一个overlay的需求，该overlay网络能够通过隧道技术承载不同vm间的通信。</p><h1 id="Vxlan介绍"><a href="#Vxlan介绍" class="headerlink" title="Vxlan介绍"></a>Vxlan介绍</h1><h3 id="STP和vlan域的限制"><a href="#STP和vlan域的限制" class="headerlink" title="STP和vlan域的限制"></a>STP和vlan域的限制</h3><p>目前二层网络使用IEEE 802.1D STP来避免环路的，STP是通过阻塞备份链路的形式来实现防环的，性价比比较低。STP的局限性也体现在在同一个rack内的机器不能配置相同的ip，这和vm间使用二层通信相互矛盾。二层中使用vlan来提供广播隔离，vlan id只有12bit字段，最多4096个广播域，这对于虚拟化来说远远不够。</p><h3 id="多租户环境"><a href="#多租户环境" class="headerlink" title="多租户环境"></a>多租户环境</h3><p>云计算在多租户环境下提供一个按需弹性资源供给，对于公有云的环境来说，云计算提供商需要在相同的物理环境下给不同租户提供一个弹性的服务。在二层网络中，vlan可以用来隔离不同租户的流量，现实中一个租户也会使用多个vlan，这就是的vlan稀缺问题更加严峻。同样在跨pod场景下，租户需要不同pod间vm相互通信，开通关闭不同pod的vm，这就需要一个更加弹性的二层环境。三层网络中，需要用到其他技术来实现不同租户需要有独立的地址分配规则。</p><h3 id="ToR资源限制"><a href="#ToR资源限制" class="headerlink" title="ToR资源限制"></a>ToR资源限制</h3><p>在虚拟化场景下，ToR需要包含所有租户的相应vm的mac地址，这就需要一个更大的tor mac资源。</p><h3 id="VxLAN基本概念"><a href="#VxLAN基本概念" class="headerlink" title="VxLAN基本概念"></a>VxLAN基本概念</h3><p>简言之 vxlan就是在一个三层网络提供二层网络的方案。<br>vxlan封装格式和封装位置<br><img src="https://img-blog.csdnimg.cn/20200217161427398.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>VNI（Vxlan Network Identifier），提供约16M（1千6百万）的Vxlan段。封装在vxlan头部，因此vxlan也可以叫做基于三层网络的二层隧道技术，无状态。隧道的端点称为VTEP（Vxlan Tunnel End Point），一般落在包含虚拟机的物理机的vSwitchr中，因此vm并不感知vxlan外层封装的字段，而VTEP同样可以封装在交换机或物理机上。</p><h3 id="vm-to-vm-vxlan通信举例"><a href="#vm-to-vm-vxlan通信举例" class="headerlink" title="vm-to-vm vxlan通信举例"></a>vm-to-vm vxlan通信举例</h3><p>vm1想要和其他vm2同时时，vm1会想vm2发送请求给vm2，vtep查找vm1所属的vni，并且查看vm2和vm1是否在同一个网段，如果是，则根据原始报文产生外层头部进行vxlan封装，然后被转发到目的vm所在的vtep，远端vtep收到后会检查vni的有效性，查看内部携带的目的mac地址是否在本vtep下的vm中，如果有则进行解封装操作，然后发给指定的vm。除了丢给目的vm外，远端vtep也会记录下内部的源mac地址和源IP地址的对应，以便回包时无需再进行泛洪。<br>#</p><h3 id="Vxlan帧格式"><a href="#Vxlan帧格式" class="headerlink" title="Vxlan帧格式"></a>Vxlan帧格式</h3><p><strong>Vxlan 头部格式</strong><br><img src="https://img-blog.csdnimg.cn/20200217165545715.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>Flags，共8比特，且低4bit必须设置I，其余置R。<br>VNI，共24比特，不同vni之间的vm不能直接通信。</p><html ><hr> </html><p><strong>外部UDP头部</strong><br><img src="https://img-blog.csdnimg.cn/20200217165929688.png" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>源端口：通过内部字段来hash计算得出，范围：49152-65535，主要用来ecmp计算时比避免hash极化。<br>目的端口：固定4789<br>UDP校验和：vxlan建议不使用。</p><html ><hr> </html><p><strong>外部IP头</strong><br><img src="https://img-blog.csdnimg.cn/20200217170622541.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><html ><hr> </html><p><strong>外部二层头部</strong><br><img src="https://img-blog.csdnimg.cn/20200217170741457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>ipv6格式参照rfc原文，这里不做介绍</p><h1 id="Vxlan部署场景介绍"><a href="#Vxlan部署场景介绍" class="headerlink" title="Vxlan部署场景介绍"></a>Vxlan部署场景介绍</h1><p>vxlan典型部署场景，DC内vm可能部署在不同的ToR，这些不同的ToR的业务IP在不同的网段内，可能存在跨DC，所属同一租户vm间通信的场景。<br>典型拓扑如下：<br><img src="https://img-blog.csdnimg.cn/20200217171502624.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>这里设定vtep部署在物理机上，也存在vxlan和非vxlan网络间的通信，这里就需要部署vxlan网关。<br><img src="https://img-blog.csdnimg.cn/20200217171903721.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>vxlan网关从vxlan接口收到vxlan包后，会解封装，然后从物理接口丢出去，同时内层vlan需要被剥离，反方向收到包，会根据数据包携带的vlan去查找所在的vxlan域，同样在封装前会剥离vlan标记。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Smokeping搭建及配置</title>
    <link href="/2020/04/05/Smokeping%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%85%8D%E7%BD%AE/"/>
    <url>/2020/04/05/Smokeping%E6%90%AD%E5%BB%BA%E5%8F%8A%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="Smokeping介绍"><a href="#Smokeping介绍" class="headerlink" title="Smokeping介绍"></a>Smokeping介绍</h1><p>Smokeping采用rrdtool做支持，生成的网络延迟数据转化图表非常漂亮，支持交互式图形浏览，你可以查看任意时间段的监控数据。 Smokeping也可以部署主/从分布式测量，即用一台服务器作为“主”，其它的服务器作为“从”并向“主”服务器传输数据，最后汇总形成系统监控数据图表。</p><p>官网：<a href="https://oss.oetiker.ch/smokeping/" target="_blank" rel="noopener">https://oss.oetiker.ch/smokeping/</a><br>GitHub：<a href="https://github.com/oetiker/SmokePing" target="_blank" rel="noopener">https://github.com/oetiker/SmokePing</a></p><h1 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h1><h3 id="安装epel-yum源"><a href="#安装epel-yum源" class="headerlink" title="安装epel yum源"></a>安装epel yum源</h3><pre><code class="bash">#rpm -ivh http://mirrors.ustc.edu.cn/fedora/epel/6/x86_64/epel-release-6-8.noarch.rpm  #修改/etc/yum.repos.d/epel.repo#</code></pre><h3 id="安装rrdtool与依赖库"><a href="#安装rrdtool与依赖库" class="headerlink" title="安装rrdtool与依赖库"></a>安装rrdtool与依赖库</h3><pre><code class="bash">yum -y install perl perl-Net-Telnet perl-Net-DNS perl-LDAP perl-lib www-perl perl-RadiusPerl perl-IO-Socket-SSL perl-Socket6 perl-CGI-SpeedyCGI perl-FCGI perl-CGI-SpeedCGI perl-Time-HiRes perl-ExtUtils-MakeMaker perl-RRD-Simple rrdtool rrdtool-perl curl fping echoping  httpd httpd-devel gcc make  wget libxml2-devel libpng-devel glib pango pango-devel freetype freetype-devel fontconfig cairo cairo-devel libart_lgpl libart_lgpl-devel mod_fastcgi screen</code></pre><h1 id="安装Smokeping"><a href="#安装Smokeping" class="headerlink" title="安装Smokeping"></a>安装Smokeping</h1><pre><code class="bash">#wget http://oss.oetiker.ch/smokeping/pub/smokeping-2.6.11.tar.gz#tar -zxvf smokeping-2.6.11.tar.gz#cdsmokeping-2.6.11#./setup/build-perl-modules.sh /usr/local/smokeping/thirdparty#./configure--prefix=/usr/local/smokeping #/usr/bin/gmake install#</code></pre><h1 id="配置Smokeping"><a href="#配置Smokeping" class="headerlink" title="配置Smokeping"></a>配置Smokeping</h1><h3 id="创建cache、data、var目录"><a href="#创建cache、data、var目录" class="headerlink" title="创建cache、data、var目录"></a>创建cache、data、var目录</h3><pre><code class="bash">mkdir -p /usr/local/smokeping/cache /usr/local/smokeping/data /usr/local/smokeping/var</code></pre><h3 id="创建日志文件"><a href="#创建日志文件" class="headerlink" title="创建日志文件"></a>创建日志文件</h3><pre><code class="bash">touch /var/log/smokeping.log</code></pre><h3 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h3><pre><code class="bash">chown apache:apache /usr/local/smokeping/cache /usr/local/smokeping/data /usr/local/smokeping/varchown apache:apache /var/log/smokeping.log</code></pre><h3 id="修改Smokeping配置文件"><a href="#修改Smokeping配置文件" class="headerlink" title="修改Smokeping配置文件"></a>修改Smokeping配置文件</h3><pre><code class="bash">cd /usr/local/smokeping/htdocs/mv smokeping.fcgi.dist smokeping.fcgicd /usr/local/smokeping/etcmv config.dist configvim config    cgiurl=http://127.0.0.1/smokeping.cgi </code></pre><h3 id="修改apache配置文件"><a href="#修改apache配置文件" class="headerlink" title="修改apache配置文件"></a>修改apache配置文件</h3><pre><code class="bash">vim /etc/httpd/conf/httpd.conf# 在DocumentRoot &quot;/var/www/html&quot;添加如下配置Alias /cache &quot;/usr/local/smokeping/cache/&quot; Alias /cropper &quot;/usr/local/smokeping/htdocs/cropper/&quot; Alias /smokeping &quot;/usr/local/smokeping/htdocs/smokeping.fcgi&quot;&lt;Directory &quot;/usr/local/smokeping&quot;&gt;AllowOverride NoneOptions All AddHandler cgi-script .fcgi .cgiOrder allow,denyAllow from allAuthName &quot;Smokeping&quot;AuthType Basic AuthUserFile /usr/local/smokeping/htdocs/htpasswdRequire valid-user DirectoryIndex smokeping.fcgi&lt;/Directory&gt;</code></pre><h3 id="开机启动与安全策略"><a href="#开机启动与安全策略" class="headerlink" title="开机启动与安全策略"></a>开机启动与安全策略</h3><pre><code class="bash">echo &quot;/usr/local/smokeping/bin/smokeping--logfile=/var/log/smokeping.log 2&gt;&amp;1 &amp;&quot; &gt;&gt; /etc/rc.localchkconfig httpd oniptables -t filter -I INPUT -p tcp --dport 80 -j ACCEPTsetenforce 0#service httpd restart/usr/local/smokeping/bin/smokeping  --logfile=/var/log/smokeping.log</code></pre><h3 id="设置密码"><a href="#设置密码" class="headerlink" title="设置密码"></a>设置密码</h3><pre><code class="bash">htpasswd -c /usr/local/smokeping/htdocs/htpasswd root</code></pre><h1 id="启动Smokeping"><a href="#启动Smokeping" class="headerlink" title="启动Smokeping"></a>启动Smokeping</h1><pre><code class="bash">/usr/local/smokeping/bin/smokeping  --logfile=/var/log/smokeping.log# 或者在/etc/init.d/目录创建smokeping启动脚本##!/bin/bash## chkconfig: 2345 80 05# Description: Smokeping init.d script# Get function from functions library. /etc/init.d/functions# Start the service Smokepingfunction start() {echo -n &quot;Starting Smokeping: &quot;      /usr/local/smokeping/bin/smokeping  --logfile=/var/log/smokeping.log &gt;/dev/null 2&gt;&amp;1### Create the lock file ###      touch /var/lock/subsys/smokepingsuccess $&quot;Smokeping startup&quot;echo}# Restart the service Smokepingfunction stop() {echo -n &quot;Stopping Smokeping: &quot;kill -9 `ps ax |grep &quot;/usr/local/smokeping/bin/smokeping&quot; |grep -v grep | awk &#39;{ print $1 }&#39;` &gt;/dev/null 2&gt;&amp;1### Now, delete the lock file ###rm -f /var/lock/subsys/smokepingsuccess $&quot;Smokeping shutdown&quot;echo}#Show status about Smokepingfunction status() {NUM=&quot;`ps -ef|grep smokeping|grep -v grep|wc -l`&quot;if [ &quot;$NUM&quot; == &quot;0&quot; ];thenecho &quot;Smokeping is not run&quot;elseecho &quot;Smokeping is running&quot;fi}### main logic ###case &quot;$1&quot; in    start)        start        ;;stop)        stop        ;;status)        status        ;;restart|reload)        stop        start;;*)   echo $&quot;Usage: $0  {start|stop|restart|reload|status}&quot;   exit 1esac   exit 0#chmod 755 /etc/init.d/smokeping   chkconfig --add smokeping       chkconfig smokeping onchkconfig httpd on   /etc/init.d/httpd restart    /etc/init.d/smokeping restart  #</code></pre><h1 id="增加监控点"><a href="#增加监控点" class="headerlink" title="增加监控点"></a>增加监控点</h1><pre><code class="bash">/usr/local/smokeping/etc/config#+ Google-Cloudmenu = GCP-SSRtitle = GCP-SSR-Monitor++ HongKongmenu = HK-SSRtitle = HK-SSRalerts = somelosshost = *.*.*.*step     = 60pings    = 60#如果遇到rd parameter mismatch报错，清理以下目录缓存即可rm -rf /opt/smokeping/cache/*rm -rf /opt/smokeping/data/*#</code></pre><h1 id="展示效果"><a href="#展示效果" class="headerlink" title="展示效果"></a>展示效果</h1><p><img src="https://img-blog.csdnimg.cn/20200224012156170.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h3 id="说明及扩展"><a href="#说明及扩展" class="headerlink" title="说明及扩展"></a>说明及扩展</h3><p>待补充</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>阿里DCN网络演进及未来规划</title>
    <link href="/2020/04/05/%E9%98%BF%E9%87%8CDCN%E7%BD%91%E7%BB%9C%E6%BC%94%E8%BF%9B%E5%8F%8A%E6%9C%AA%E6%9D%A5%E8%A7%84%E5%88%92/"/>
    <url>/2020/04/05/%E9%98%BF%E9%87%8CDCN%E7%BD%91%E7%BB%9C%E6%BC%94%E8%BF%9B%E5%8F%8A%E6%9C%AA%E6%9D%A5%E8%A7%84%E5%88%92/</url>
    
    <content type="html"><![CDATA[<h1 id="2013-2016阿里DCN网络演进"><a href="#2013-2016阿里DCN网络演进" class="headerlink" title="2013~2016阿里DCN网络演进"></a>2013~2016阿里DCN网络演进</h1><p>说明：本文提到的各项思路来自于前阿里网络专家曹捷，这里只是做了总结。</p><h3 id="2013-IDC建设标准化的建立"><a href="#2013-IDC建设标准化的建立" class="headerlink" title="2013 IDC建设标准化的建立"></a>2013 IDC建设标准化的建立</h3><p>具体：网络设备配置自动化，架构标准化、配置标准化、架构冗余设计，这些工作提升了阿里网络的交付效率、以及提升网络稳定。</p><h3 id="2014年-提升单IDC的容量"><a href="#2014年-提升单IDC的容量" class="headerlink" title="2014年 提升单IDC的容量"></a>2014年 提升单IDC的容量</h3><p>具体：单DC服务器容量超过5w、大规模部署40G+10G、干掉DC内部的IGP协议。</p><h3 id="2015年-为云服务提供初代的SDN部署方式（OpenFlow-netconf）"><a href="#2015年-为云服务提供初代的SDN部署方式（OpenFlow-netconf）" class="headerlink" title="2015年 为云服务提供初代的SDN部署方式（OpenFlow+netconf）"></a>2015年 为云服务提供初代的SDN部署方式（OpenFlow+netconf）</h3><p>当前回顾来看SDN到底是由软件来做还是硬件仍有待商榷、流量可视化</p><h3 id="2016年-25G-自动化运维平台的建立"><a href="#2016年-25G-自动化运维平台的建立" class="headerlink" title="2016年 25G+自动化运维平台的建立"></a>2016年 25G+自动化运维平台的建立</h3><h4 id="提出三个问题"><a href="#提出三个问题" class="headerlink" title="提出三个问题"></a>提出三个问题</h4><p>1、为什么要用25G？万兆到25G驱动力是什么<br>2、25G的收敛比多少？<br>3、25G的关键困难点是？<br>SDN对于阿里来说最大的价值不是在于转发的控制，而在于网络自动化运维的极大推进。因此2016年主要工作在于如何实现流量的可视化以及高效的自动化配置与部署。</p><p>做了给予OpenR的48 * 25G+8 * 100G，可以做到1:1的收敛的大管道，上25G的驱动力是sys测IO瓶颈被打破了（SSD+PCIE高速通信），25G的keypoint在于光模块+光纤成本、上架密度的选择（定义25GAOC标准）。</p><p>自动化运维平台，前提是标准化。网络架构的设计会推动网络运营的前进，同时网络运营的结果必须要推进网络架构的设计。架构设计之初一定要充分考虑运营要什么，以及要它的原因是否合理，架构能够提供什么，以及提供的是否具备可落地。在自动化运维平台设计上不会有最优秀的网络架构设计，只会有在合适的时间做合适的事。</p><p>阿里首先做了一下两件事情：1、交换机北向接口的标准化，交换机长期的北向接口都停留在cli方式，这种方式始终无法提供诊断手段以及影响评估手段。这里选择netconf。2、流量可视化，解释讲网络转发质量白盒化（buffer、queue、packetlost、lantency、session/path）</p><h4 id="流量可视化的设计目标"><a href="#流量可视化的设计目标" class="headerlink" title="流量可视化的设计目标"></a>流量可视化的设计目标</h4><p>秒级故障定位–&gt;分钟级故障隔离–&gt;智能引导式故障修复–&gt;网络性能可预测可优化</p><h4 id="DCN的运维数据采集分析思路"><a href="#DCN的运维数据采集分析思路" class="headerlink" title="DCN的运维数据采集分析思路"></a>DCN的运维数据采集分析思路</h4><p>芯片可视化技术创新+成熟的大数据平台+网络应用的关键算法（如何通过最少量的介入转发，能够把整个转发结构抽象画并实现一个完整的转发模型）==&gt;最终完成网络分析管理系统。</p><h3 id="未来的规划"><a href="#未来的规划" class="headerlink" title="未来的规划"></a>未来的规划</h3><p>1、从芯片角度解决资源安全问题；<br>2、open IPOC系统落地；（交换机直接出彩光，并且不是一个硬件化的产品，而是一个软件化，将光的运维和IP的管控结合到一起，创造出一个全新的物理层和应用层之间的流量交互关系）；<br>3、50G/100G以太网接入方案。<br>Broadcom统治着几乎所有DCN芯片市场，资源安全得不到保障、全面同质化造成风险最大化、垄断带来的创新乏力。推动行业上游帮助我们走向我们认为正确的下一代网络设计。</p><h3 id="关于Open-IPOC和DCI的一些思考"><a href="#关于Open-IPOC和DCI的一些思考" class="headerlink" title="关于Open IPOC和DCI的一些思考"></a>关于Open IPOC和DCI的一些思考</h3><p>传统的OTN无法快速迭代创新，满足DCI的设计要求，DCI的设计要求概括到一下几点：快速部署、快速上线、廉价的带宽、管理和运维最大化的自动化。<br>OTN缺陷：<br>OTN的端到端的封闭性、optic和IP的长期隔离、ISP为主导的产业格局（OTN是以ISP为主导的产品，OTT只是一个使用者）</p><h4 id="Open-IPOC的思路和意义"><a href="#Open-IPOC的思路和意义" class="headerlink" title="Open IPOC的思路和意义"></a>Open IPOC的思路和意义</h4><p>1、专业的人做专业的事儿，可以让专业的从事DWDM的人将光的调制解调集成在DCO（Digital Coherent Optical，数字相干光学）解决光的技术疑虑，DCO就是讲整个OTN系统中最关键的ODSP芯片集成在光模块中。<br>2、IP的整个管控方案与optic的融合（光层的流量控制），真正意义上实现DCI从物理层到应用层的统一。<br>3、OTT为主导的技术走向。</p><h3 id="50G-100G"><a href="#50G-100G" class="headerlink" title="50G/100G"></a>50G/100G</h3><p>HPC场景场景下对带宽和性能的需求；<br>更高性能存储技术的应用；<br>带宽单Gb成本的进一步优化。</p><h4 id="风险"><a href="#风险" class="headerlink" title="风险"></a>风险</h4><p>56G serdes（SERializer/DESerializer调制解调的缩写）的技术相对垄断、芯片时间预期太长；<br>追求半导体技术的极限、可能带来的硬件风险；（比如ECC Error错误，memory芯片单比特跳转）；<br>上联到底是200G还是400G?<br>光器件的选择，光模块光纤，QSPF or QSPF-DD？到底是AOC还是DAC。</p><h3 id="DCN网络设计的目标"><a href="#DCN网络设计的目标" class="headerlink" title="DCN网络设计的目标"></a>DCN网络设计的目标</h3><p>1、简单高效、稳定可预期，引入充分竞争<br>2、简单高效：尽可能简化DCN设计中复杂状态和逻辑的加入；<br>3、稳定可预期：充分利用技术能力将网络行为从黑盒转换为白盒；<br>4、引入充分竞争：从最底层的芯片到上层应用设计，技术上都必须是通用的方案，不可盲目的追求所谓的技术先进性。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>My Fucking Beautiful Regal</title>
    <link href="/2020/04/05/My%20Fucking%20Beautiful%20Regal/"/>
    <url>/2020/04/05/My%20Fucking%20Beautiful%20Regal/</url>
    
    <content type="html"><![CDATA[<h1 id="我的第一辆车-君威"><a href="#我的第一辆车-君威" class="headerlink" title="我的第一辆车-君威"></a>我的第一辆车-君威</h1><p>有时候，明明两个从来没见过的陌生人，不用说话，互相看一眼就成为最好的朋友，车也一样。</p><p>2018年，26岁的我拥有了人生第一辆车，2018款别克君威豪华版。买车前看了好几款车9代雅阁、7代凯美瑞、本田思域、奥迪a3两厢、阿特兹，然而最终由于颜值和荷包太瘪的原因选择了君威1.5T豪华版。话说从选车到上牌全程都我一人来搞，当去4s店提车时，女销售笑着说第一次见选车、买车、提车全程都是一个人的顾客😄。</p><p><strong>提车前需要提前一天到4s店验车，第一次见到骚红君威，按耐不住激动立马拍了张照片，人生若只如初见的感觉</strong><br><img src="https://img-blog.csdnimg.cn/2020022519575810.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="提车前需要提前一天到4s店验车"></p><p><strong>网上提前做了功课，当时新君威由于分体式控制臂衬套存在涉及缺陷，提车时上汽通用刚发布了召回，当时心情也是没谁了，还好验车时销售说出厂已经做了加固措施。</strong><br><img src="https://img-blog.csdnimg.cn/20200225202957345.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>可能是我这辈子唯一一次拥有京拍的时候，十块钱办的临牌，嘻嘻~，公司很多人摇了7、8年还是冀A牌，0.03%不到的中签率！！！！我还是老老实实滚回上川A吧</strong><br><img src="https://img-blog.csdnimg.cn/20200225203051518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><strong>提车当晚就出发回成都准备上牌，一口气开到宁陕服务区（中间服务区只是吃喝拉撒停留下），实在是顶不住了就在服务区睡了一觉，当时天还在下雨，又是晚上，但心里是美滋滋的，哈哈哈，可能以后再也不会有这种冲动了。</strong><br><img src="https://img-blog.csdnimg.cn/20200225201537554.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><strong>到成都的当天晚上跑回学校逛逛，刚好看到在放映《大话西游之月光宝盒》，这部电影我印象最深的话不是“曾经有一份真诚的爱情放在我面前”，而是“你看那个人的背影好奇怪，他好像条狗啊。”</strong><img src="https://img-blog.csdnimg.cn/20200225203240691.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><strong>回去的时候刚好是周末，只能等到下周一才能上牌了，周末两天就和在读研的同学吃吃喝喝，然后去了趟都江堰。</strong><br><img src="https://img-blog.csdnimg.cn/20200225204247670.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200225204211338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><strong>对了，周末在12123上提前把车牌号选了，下周一就可以直接去办交强险、交税、验车、领牌了</strong><br><img src="https://img-blog.csdnimg.cn/2020022520453228.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/2020022520444158.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200225205039682.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><strong>下午顺利拿到拍照，顺道让车管所的人免费帮装上，去买些吃的，准备回北京了</strong><br><img src="https://img-blog.csdnimg.cn/20200225205133523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><strong>一路遵纪守法的开着，毕竟有正式拍照，违纪要被扣分了。一路开回北京路上没拍照，不过到北京后我把行车记录仪的录像拷贝出来保存一份，到了进京检查站办了张进京证，初次需要去现场办，之后直接在北京交警app上点下就行。</strong><br><img src="https://img-blog.csdnimg.cn/20200225210201800.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><strong>我车几乎都是在五环外开，也没限号啥的，有时候去鼓楼大街、簋街附近吃小龙虾，一般都是停在附近的小路里。有一次误开到二环上（北京二环外地车全线禁行），赶紧在下一个口下来了，后来也没收到罚单。有次去市内体检，四环上被一女司机追尾，下车一直抱怨我为啥刹车，我tm当时就惊了。不过为了避免影响交通，我们协商先拍照，各办各事儿，然后再一同去交通支队处理，当然最后交警叔叔判她全责。话说尼桑前脸真硬，都把我君威屁股撞掉一半，愣是只蹭掉点漆，变形也不严重。</strong><br><img src="https://img-blog.csdnimg.cn/20200225210856740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200225210914457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200225211102195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><strong>后来就开车君威北京周围跑，2019年元旦，一个人买些吃的就去内蒙古跨年，晚上找地方住下，刚好有一个车队放烟花，我就跑到外拿着手机和他们一起拍照录像，就这样来到了2019年，早上外面零下22度，不过君威还是很给力的， 一下就打着车了。在周围都是雪的路上，很少看到车，超级喜欢这种感觉，总让我想起肖申克救赎的结尾，安迪从监狱逃离，开着敞篷车，驶向太平洋的自由的彼岸的那个场景。</strong><br><img src="https://img-blog.csdnimg.cn/20200225212235642.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200225212606929.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200225212547842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200225212526656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/20200225212620922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br> <img src="https://img-blog.csdnimg.cn/20200225212308874.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20200225213413555.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><strong>后来由于工作原因离开了北京，离开了那个熟悉不能再熟悉的后厂村路。</strong><img src="https://img-blog.csdnimg.cn/20200225220145547.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200225220205103.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h3 id="未完待续"><a href="#未完待续" class="headerlink" title="未完待续"></a>未完待续</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>BIRD</title>
    <link href="/2020/04/05/BIRD/"/>
    <url>/2020/04/05/BIRD/</url>
    
    <content type="html"><![CDATA[<h1 id="什么是BIRD"><a href="#什么是BIRD" class="headerlink" title="什么是BIRD"></a>什么是BIRD</h1><p>官网：<a href="https://bird.network.cz" target="_blank" rel="noopener">https://bird.network.cz</a><br>GitHub：<a href="https://github.com/BIRD/bird" target="_blank" rel="noopener">https://github.com/BIRD/bird</a><br>Noction：<a href="https://www.noction.com" target="_blank" rel="noopener">https://www.noction.com</a></p><p>BIRD是BIRD Internet Routing Daemon的缩写，是一个功能齐全的动态IP路由守护进程，支持IPv4和v6协议，支持静态路由、rip、ripng、ospf、ospf6、bgp等协议，最新版为2.0.7。BIRD相比Quagga在大规模网络中会更稳定，尤其是在会话收敛的时候， Quagga会出现session被丢弃的问题，并且只有一个RIB，相比下会更消耗系统资源，因此很多欧洲IX都在使BRID。（BIRD在1.6.4版本之前存在安全漏洞，本地攻击者可借助birdc中的BGP掩码表达式利用该漏洞造成拒绝服务，栈消耗和守护进程崩溃）。<br>PS：我到现在还没明白BIRD里的B是什么缩写，这里附上官方的解释，各位如果有谁看明白给解释下。<br>（The name BIRD’ is actually an acronym standing for `BIRD Internet Routing Daemon’. Let’s take a closer look at the meaning of the name:BIRD: Well, we think we have already explained that. It’s an acronym standing for BIRD Internet RoutingDaemon’, you remember, don’t you? :-)）</p><h1 id="BIRD作用"><a href="#BIRD作用" class="headerlink" title="BIRD作用"></a>BIRD作用</h1><p>BIRD在内网骨干网、外网BGP平台结合多种网络监控可以实现流量的自动化调度，在百度、腾讯、阿里都有广泛的应用，包括美国Noction开发的IRP智能路由平台的产品。感兴趣的同学可以去Noction官网看下，发布产品的硬件就是一台dell服务器，连dell的logo都懒得去掉了 :)，具体实现细节就不在这里赘述了，自己捣鼓吧。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>基于CentOS7安装，其他版本类似</p><pre><code class="bash"># 下载bird，并安装其依赖包wget ftp://bird.network.cz/pub/bird/bird-2.0.7.tar.gzyum install -y ncurses-devel readline-devel （centos还需要安装flex bison）# 下载git，并安装依赖包（可选）yum install -y curl-devel expat-devel gettext-devel openssl-devel zlib-devel gcc perl-ExtUtils-MakeMakertar -zxvf git-2.25.1.tar.gzcd git-2.25.1./configure --prefix=/usr/local/gitmake make install # 删除系统自带旧版git（可选）yum remove git# 配置git环境变量（可选）vim /etc/profile# GIT_HOMEGIT_HOME=/usr/local/gitexport PATH=$PATH:$GIT_HOME/bin# 生效（可选）source /etc/profile# 升级系统内核（可选）# 生产环境一直用的centos6.5+bird-2.0.4，最新版2.0.7不支持低版本内核，这里建议直接使用bbr脚本安装，顺带把bbr也给安装了，提升系统带宽吞吐及降低延迟wget --no-check-certificate https://github.com/teddysun/across/raw/master/bbr.shchmod +x bbr.sh./bbr.sh# 安装birdtar tar -zxvf bird-2.0.7.tar.gzcd bird-2.0.7/configuremakemake install# 关闭防火墙，禁止开机启动systemctl stop firewallsystemctl disable firewalld# bird配置文件目录/usr/local/etc/bird.conf# 启动birdbird #读取默认目录下的配置文件，也可以 bird -c指定其他配置文件</code></pre><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>bird有两种配置方式，一种是传统的cli方式（birdc），另一种直接修改配置文件，birdc conf生效。</p><h1 id="bird-bgp测试"><a href="#bird-bgp测试" class="headerlink" title="bird bgp测试"></a>bird bgp测试</h1><p>。。。</p><h1 id="bird-mrt测试"><a href="#bird-mrt测试" class="headerlink" title="bird mrt测试"></a>bird mrt测试</h1><p>。。。</p><h1 id="bird-bfd测试"><a href="#bird-bfd测试" class="headerlink" title="bird bfd测试"></a>bird bfd测试</h1><p>。。。</p><h1 id="bird-api"><a href="#bird-api" class="headerlink" title="bird api"></a>bird api</h1><p>pybird，bird第三方api，可以拿来二次开发。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>MRT介绍</title>
    <link href="/2020/04/05/MRT%E4%BB%8B%E7%BB%8D/"/>
    <url>/2020/04/05/MRT%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<h2 id="MRT有什么用"><a href="#MRT有什么用" class="headerlink" title="MRT有什么用"></a>MRT有什么用</h2><p>Multi-Threaded Routing Toolkit（多线程业务路由工具包），我们知道BGP路由包含沿途的AS号，目的前缀和下一跳，但是无法得到相邻AS的的出口IP和中间AS出入口路由器的IP地址。<br>BGP路由器在RIB中维护可达性信息，存放在以下三个集合中：<br>1、<strong><em>Adj-RIBs-In</em></strong>：从邻居AS入站更新消息中学习得到的路由信息；<br>2、<strong><em>Loc-RIB</em></strong>：通过应用本地策略从Adj-RIB-In选择符合条件的路由，然后将路由信息存放到本地路由表当中；<br>3、<strong><em>Adj-RIBs-Out</em></strong>：长Loc-RIB中选择，将向其邻居通告的路由，每个邻居由于策略不同，因此会根据每个对等体创建特定的Adj-RIB-Out。</p><p>有些时候，需要收集路由器上生成的BGP路由信息，用于监视、故障排查和研究。<br>1、BGP looking glass给用户只读权限来访问一个路由器的命令窗口，look glass是一个交互式探索，而不是一个连续的数据采集，可以通过与被监控的路由器建立BGP方式来实现。<br>2、也可以通过专门为监控目的设计的协议来监控，比如BMP，允许监控机周期性的访问路由器的Adj-RIBs-In和BGP会话。<br>3、路由收集器则是直接和路由器建立BGP，每个路由器在每次Adj-RIB-Out更改时发送给收集器更新消息，每次收到更新BGP收集器就会dump a snapshot（RIB dump，RIB-out表的快照），并且会对比与上次的差别，然后将更新的消息和状态改变存到Updates dump（更新快照）。RIB dump提供了对BGP路由表变化的有效总结，具有粗略的时间粒度，但是足够用于研究，而Updates dump携带大量的要处理的信息，但是包含了路由的完整信息，用于路由变化的分析。比如常用到的Route Views，目前运行了18个收集器，这些收集器遍布到全球和几百个VPs建立BGP，Route Views没2小时保存一个RIB dump，每15min保存一个Updates dump，并导出MRT格式。</p><h2 id="MRT报文"><a href="#MRT报文" class="headerlink" title="MRT报文"></a>MRT报文</h2><h3 id="标准MRT报头格式"><a href="#标准MRT报头格式" class="headerlink" title="标准MRT报头格式"></a>标准MRT报头格式</h3><p><img src="https://img-blog.csdnimg.cn/20200328235552456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h3 id="Type-amp-subType-amp-ET"><a href="#Type-amp-subType-amp-ET" class="headerlink" title="Type &amp; subType &amp; ET"></a>Type &amp; subType &amp; ET</h3><p>这里主要介绍BGP的MRT格式，type16：BGP4MP，type17：BGP4MP_ET，_ET后缀代表扩展时间戳的MRT报文头。老的时间戳只有4个8bit的数据表示，这个通常被称作UNIX time，表示距离Jan. 1, 1970年之后多长时间，理论上最大值代表的时间为：03:14:07 on January 19, 2038，扩展的时间戳数据存储长度增加到32bits，并且可以精确到毫秒。Length表示message字段的长度，不包括MRT Common头部。这里的message字段长度是可变的，这里存储的内容会根据type&amp;subtype字段的内容改变。</p><h3 id="扩展时间戳MRT-格式报头"><a href="#扩展时间戳MRT-格式报头" class="headerlink" title="扩展时间戳MRT 格式报头"></a>扩展时间戳MRT 格式报头</h3><p><img src="https://img-blog.csdnimg.cn/20200328235654845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>注意：Microsecond Timestamp也计入到Length内。</p><h3 id="TABLE-DUMP-type"><a href="#TABLE-DUMP-type" class="headerlink" title="TABLE_DUMP type"></a>TABLE_DUMP type</h3><p><img src="https://img-blog.csdnimg.cn/20200328235728523.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>DUMP表，这个用来记录BGP路由信息库（RIB），建议以TABLE_DUMP_V2格式存储，大部分数据都是以TABLE_DUMP格式存储，考虑到兼容问<br>题，还是以TABLE_DUMP格式存储。<br><strong>Vies Number</strong>通常代表0，用于区分多个RIB视图；<br><strong>Prefix</strong>，包含RIB条目的IP地址，包含IPv4和IPv6两种不同的长度；<br><strong>Status</strong>，固定设置为1，在Table_Dump中并没有使用；<br><strong>Originated time</strong>，侦听到该条前缀的时间，这个值和MRT报头中的时间戳存储存储格式相同；<br><strong>Peer IP address</strong>，提供该条RIB条目的邻居地址，同样包含IPv4和IPv6两种格式，Peer AS存储邻居as号；<br><strong>Attribute Length</strong>，该条前缀属性的长度；<br><strong>BGP Attribute</strong>，BGP属性，其中AS_Path只支持2字节as号，TABLE_DUMP_v2支持4字节as号。</p><h3 id="TABLE-DUMP-V2-type"><a href="#TABLE-DUMP-V2-type" class="headerlink" title="TABLE_DUMP_V2 type"></a>TABLE_DUMP_V2 type</h3><p>Table dump_v2版本相对于table dump类型来说包含对4字节as号和MP-BGP的支持，通过利用一个邻居索引列表（Peer_Index_Table）提升了对Table_dump存储的空间利用率，并且允许一条MRT记录去记录一条NLRI条目。</p><h3 id="PEER-INDEX-TABLE-Subtype"><a href="#PEER-INDEX-TABLE-Subtype" class="headerlink" title="PEER_INDEX_TABLE Subtype"></a>PEER_INDEX_TABLE Subtype</h3><p><img src="https://img-blog.csdnimg.cn/20200328235832191.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h3 id="PEER-ENTRIES"><a href="#PEER-ENTRIES" class="headerlink" title="PEER ENTRIES"></a>PEER ENTRIES</h3><p><img src="https://img-blog.csdnimg.cn/20200328235846341.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h3 id="Type-16：BGP4MP-Type"><a href="#Type-16：BGP4MP-Type" class="headerlink" title="Type 16：BGP4MP Type"></a>Type 16：BGP4MP Type</h3><p>BGP4MP类型包含以下7种子类型：<br><img src="https://img-blog.csdnimg.cn/20200328235921877.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h4 id="1、subType0：BGP4MP-STATE-CHANGE"><a href="#1、subType0：BGP4MP-STATE-CHANGE" class="headerlink" title="1、subType0：BGP4MP_STATE_CHANGE"></a>1、subType0：BGP4MP_STATE_CHANGE</h4><p><img src="https://img-blog.csdnimg.cn/20200328235944801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>用来表示BGP初始状态机，用来表示当前状态和前一个状态的变迁，当邻居AS每设置的时候，该字段被设置为0，这个字段存储了当前状态和前一个状态，具体code和状态对应关系如下：</p><p><img src="https://img-blog.csdnimg.cn/20200329000011544.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"></p><h4 id="2、subType1：BGP4MP-MESSAGE"><a href="#2、subType1：BGP4MP-MESSAGE" class="headerlink" title="2、subType1：BGP4MP_MESSAGE"></a>2、subType1：BGP4MP_MESSAGE</h4><p><img src="https://img-blog.csdnimg.cn/20200329000029990.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>用来记录BGP message，原始的BGP message被封装在BGP message字段内，包含16个8位字段，同样这里只支持2字节的as号。</p><h4 id="3、subType2：BGP4MP-MESSAGE-AS4"><a href="#3、subType2：BGP4MP-MESSAGE-AS4" class="headerlink" title="3、subType2：BGP4MP_MESSAGE_AS4"></a>3、subType2：BGP4MP_MESSAGE_AS4</h4><p><img src="https://img-blog.csdnimg.cn/20200329000054934.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>用来支持4字节的as号。</p><h4 id="4、subType3：BGP4MP-STATE-CHANGE-AS4"><a href="#4、subType3：BGP4MP-STATE-CHANGE-AS4" class="headerlink" title="4、subType3：BGP4MP_STATE_CHANGE_AS4"></a>4、subType3：BGP4MP_STATE_CHANGE_AS4</h4><p><img src="https://img-blog.csdnimg.cn/20200329000128202.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0RhbmJvX2JpbGk=,size_16,color_FFFFFF,t_70" srcset="/img/loading.gif" alt="在这里插入图片描述"><br>用来支持4字节的as号。</p><h4 id="5、BGP4MP-MESSAGE-LOCAL"><a href="#5、BGP4MP-MESSAGE-LOCAL" class="headerlink" title="5、BGP4MP_MESSAGE_LOCAL"></a>5、BGP4MP_MESSAGE_LOCAL</h4><p>前面BGP4MP_MESSAGE这个用来存储远端产生的MESSAGE消息（被动接收远端MESSAGE），如果是本端route collector主动产生的MESSAGE消息如何存储，此时就用到BGP4MP_MESSAGE_LOCAL消息格式。</p><h4 id="6、BGP4MP-MESSAGE-AS4-LOCAL"><a href="#6、BGP4MP-MESSAGE-AS4-LOCAL" class="headerlink" title="6、BGP4MP_MESSAGE_AS4_LOCAL"></a>6、BGP4MP_MESSAGE_AS4_LOCAL</h4><p>用来支持4字节的as号。</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
